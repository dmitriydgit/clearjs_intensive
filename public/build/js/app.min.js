var galleryController=function(){"use strict";return class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)})}}}(),galleryModel=function(){"use strict";return class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}}}(),galleryView=function(){"use strict";return class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result")},this.readyDataForGallery=[],this.visibleData=[]}init(t){this.refreshGallery(t)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.readyDataForGallery=t.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),itemID:t.id})),this.visibleData=[],this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.itemID}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary">View</button>\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary edit">Edit</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}}}(),observer=function(){"use strict";return class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}}}(),loginController=function(){"use strict";return class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}}(),loginModel=function(){"use strict";return class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}}}(),loginView=function(){"use strict";return class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}}}(),mainController=function(){"use strict";return class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}}(),mainModel=function(){"use strict";return class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}}}(),mainView=function(){"use strict";return class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}}(),profileController=function(){"use strict";return class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}}(),profileModel=function(){"use strict";return class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}}}(),profileView=function(){"use strict";return class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}}}();!function(){"use strict";class t{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t){t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}document.querySelector("#login-view"),document.querySelector("#main-view"),document.querySelector("#profile-view"),document.querySelector("#gallery-view"),document.querySelector("#mainPageBtn"),document.querySelector("#profileBtn"),document.querySelector("#galleryBtn");const e=document.querySelector("#wrapper");let s={"":()=>{t.initTemplate(e,"login-view"),new class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}(new class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}},new class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}},t)},mainPage:()=>{t.initTemplate(e,"mainPage-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}(new class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}(t),t)},profile:()=>{t.initTemplate(e,"profile-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}(new class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}},new class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}},new t)},gallery:()=>{t.initTemplate(e,"gallery-view");let s=new class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}};new class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)})}}(new class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result")},this.readyDataForGallery=[],this.visibleData=[]}init(t){this.refreshGallery(t)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.readyDataForGallery=t.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),itemID:t.id})),this.visibleData=[],this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.itemID}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary">View</button>\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary edit">Edit</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}},s,new t)},contacts:()=>{t.initTemplate(e,"contact-view"),console.log("Contacts route is loaded")}};function i(){let e=document.location.hash.replace(/^#/,"");e&&!t.isLoggedIn()?t.navigateTo(""):function(t){let e=s[t];e&&e()}(e)}window.addEventListener("load",i),window.addEventListener("hashchange",i)}();var router=function(t){"use strict";class e{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t){t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}document.querySelector("#login-view"),document.querySelector("#main-view"),document.querySelector("#profile-view"),document.querySelector("#gallery-view"),document.querySelector("#mainPageBtn"),document.querySelector("#profileBtn"),document.querySelector("#galleryBtn");const s=document.querySelector("#wrapper");let i={"":()=>{e.initTemplate(s,"login-view"),new class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}(new class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}},new class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}},e)},mainPage:()=>{e.initTemplate(s,"mainPage-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}(new class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}(e),e)},profile:()=>{e.initTemplate(s,"profile-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}(new class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}},new class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}},new e)},gallery:()=>{e.initTemplate(s,"gallery-view");let t=new class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}};new class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)})}}(new class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result")},this.readyDataForGallery=[],this.visibleData=[]}init(t){this.refreshGallery(t)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.readyDataForGallery=t.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),itemID:t.id})),this.visibleData=[],this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.itemID}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary">View</button>\n\t\t\t\t\t\t\t\t\t\t<button type="button" class="btn btn-outline-secondary edit">Edit</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}},t,new e)},contacts:()=>{e.initTemplate(s,"contact-view"),console.log("Contacts route is loaded")}};return t.updateRoute=function(){let t=document.location.hash.replace(/^#/,"");t&&!e.isLoggedIn()?e.navigateTo(""):function(t){let e=i[t];e&&e()}(t)},t}({}),utils=function(){"use strict";return class{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImdhbGxlcnkuY29udHJvbGxlci5qcyIsImdhbGxlcnkubW9kZWwuanMiLCJnYWxsZXJ5LnZpZXcuanMiLCJvYnNlcnZlci5qcyIsImxvZ2luLmNvbnRyb2xsZXIuanMiLCJsb2dpbi5tb2RlbC5qcyIsImxvZ2luLnZpZXcuanMiLCJtYWluLmNvbnRyb2xsZXIuanMiLCJtYWluLm1vZGVsLmpzIiwibWFpbi52aWV3LmpzIiwicHJvZmlsZS5jb250cm9sbGVyLmpzIiwicHJvZmlsZS5tb2RlbC5qcyIsInByb2ZpbGUudmlldy5qcyIsInV0aWxzLmpzIiwicm91dGVyLmpzIiwibG9naW4vbG9naW4uY29udHJvbGxlci5qcyIsImxvZ2luL2xvZ2luLm1vZGVsLmpzIiwibG9naW4vbG9naW4udmlldy5qcyIsIm1haW5QYWdlL21haW4uY29udHJvbGxlci5qcyIsIm1haW5QYWdlL21haW4ubW9kZWwuanMiLCJtYWluUGFnZS9tYWluLnZpZXcuanMiLCJwcm9maWxlL3Byb2ZpbGUuY29udHJvbGxlci5qcyIsInByb2ZpbGUvcHJvZmlsZS5tb2RlbC5qcyIsInByb2ZpbGUvcHJvZmlsZS52aWV3LmpzIiwiZ2FsbGVyeS9vYnNlcnZlci5qcyIsImdhbGxlcnkvZ2FsbGVyeS5jb250cm9sbGVyLmpzIiwiZ2FsbGVyeS9nYWxsZXJ5Lm1vZGVsLmpzIiwiZ2FsbGVyeS9nYWxsZXJ5LnZpZXcuanMiLCJhcHAuanMiXSwibmFtZXMiOlsibW9kZWwiLCJ2aWV3Iiwib2JzZXJ2ZXIiLCJ1dGlscyIsImluaXQiLCJsb2ciLCJnZXREYXRhIiwidGhlbiIsImRhdGEiLCJnZXRVcmwiLCJmZXRjaCIsInRoaXMiLCJyZXNwb25jZSIsImpzb24iLCJ1c2Vyc0xpc3REYXRhIiwiRE9NRWxlbWVudHMiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJyZWFkeURhdGFGb3JHYWxsZXJ5IiwidmlzaWJsZURhdGEiLCJyZWZyZXNoR2FsbGVyeSIsInByZXBhcmVEYXRhIiwiYml1bGRHYWxsZXJ5IiwibWFwIiwiaXRlbSIsImluZGV4IiwidXJsRm9tYXQiLCJ1cmwiLCJuYW1lRm9ybWF0IiwibmFtZSIsImlkIiwicHVzaCIsImFwcGx5IiwicmVzdWx0QmxvY2siLCJpbm5lckhUTUwiLCJpIiwibGVuZ3RoIiwiY3JlYXRlR2FsbGVyeUl0ZW0iLCJpdGVtSUQiLCJ0b1VwcGVyQ2FzZSIsInN1YnN0cmluZyIsInRvTG93ZXJDYXNlIiwiaW5kZXhPZiIsImV2ZW50cyIsImZ1bmMiLCJhcmciLCJsb2dpbk1vZGVsIiwibG9naW5WaWV3IiwiZmlsbFN0YXJ0UGFnZVVzZXJEYXRhIiwiYmluZEV2ZW50cyIsImdldENoZWNrYm94U3RhdHVzIiwiY2hlY2tCb3hSZW1lbWVtYmVyTWUiLCJjaGVja2VkIiwiZW1haWwiLCJ2YWx1ZSIsImxvZ2luIiwicGFzc3dvcmQiLCJzdWJtaXRCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiaW5pdFZhbGlkYXRpb24iLCJiaW5kIiwiZXhpdEJ0biIsImluaXRMb2dPdXQiLCJldmVudCIsInByZXZlbnREZWZhdWx0IiwidGFyZ2V0IiwiaGlkZUFsZXJ0TXNncyIsImNyZWRlbnRpYWxzIiwiZ2V0TG9nQW5kUGFzcyIsInZhbGlkUmVzdWx0IiwiY2hlY2tGaWVsZHMiLCJsb2dBbmRQYXNzVmFsaWRhdGlvbiIsInN0YXR1cyIsImdldEFuZFNldENoZWNrYm94U3RhdHVzIiwibmF2aWdhdGVUbyIsInNob3dCdXR0b25zIiwiaGlkZUVudGVyQnRuIiwic2hvd0Vycm9yTXNnIiwibG9nT3V0IiwiaGlkZUJ1dHRvbnMiLCJzaG93RW50ZXJCdG4iLCJzZXRDaGVja2JveFN0YXR1cyIsInVybEFkbWluVXNlciIsInVybExvZ2luIiwicmVzcG9uc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwic2V0SXRlbSIsIm9iaiIsIkpTT04iLCJzdHJpbmdpZnkiLCJyZW1vdmVJdGVtIiwicGFyYW1zIiwic2V0VXNlckluZm8iLCJwYXNzIiwiY2hlY2tFbWFpbCIsImNoZWNrUGFzc3dvcmQiLCJ0ZXN0IiwiaXBob25lIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJjb3VudGVyIiwiaXNHYWxsZXJ5SW5pdGVkIiwiaXNVc2VyTG9nZ2VkSW4iLCJ1c2VyRGF0YSIsIm1zZ0NvZGUiLCJzaG93SGlkZSIsInNob3ciLCJhbGVydE1zZyIsIm5vdEZpbGxlZEVtYWlsTXNnIiwibm90RmlsbGVkUGFzc01zZyIsIndyb25nRW1haWxNc2ciLCJ3cm9uZ1Bhc3NNc2ciLCJoaWRlIiwic2hvd0VscyIsIm1haW5QYWdlQnRuIiwicHJvZmlsZUJ0biIsImdhbGxlcnlCdG4iLCJjb250YWN0c0J0biIsImhpZGVFbHMiLCJsb2dpbkJ0biIsIm9iamVjdCIsImtleSIsImZvckVhY2giLCJET01FbGVtIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwiYXJyIiwidXNlcnNBdmF0YXJzIiwiZ2V0UHJvZmlsZURhdGEiLCJwcm9maWxlRGF0YSIsImdldEF2YXRhcnMiLCJhZGRQb3N0QnRuIiwiYWRkUG9zdCIsImF1dGhvck5ld1Bvc3QiLCJ0ZXh0TmV3UG9zdCIsInBvc3REYXRhIiwibW9tZW50IiwiY2hvb3NlQXZhdGFyIiwibmV3SW1hZ2UiLCJzcGxpdCIsInNhdmVQb3N0IiwiYXZhdGFyc1VybCIsInByb2ZpbGVVcmwiLCJyZWFkeURhdGEiLCJpbml0TGlzdGVuZXJzIiwicmVmcmVzaFBvc3RzIiwiZmlsbEFib3V0IiwiYWRkTmV3UG9zdElucHV0Iiwic2hvd0Zvcm1Gb3JBZGRpbmciLCJoaWRlRm9ybUZvckFkZGluZyIsInNob3dFbCIsImFkZE5ld0Zvcm0iLCJjbGVhckZvcm1Gb3JBZGQiLCJoaWRlRWwiLCJiaXVsZFZpZXciLCJjcmVhdGVQb3N0IiwiaW1ncyIsImltYWdlcyIsImVsZW1lbnQiLCJkYXRlIiwidGV4dCIsIndlbnRUb0xpbmsiLCJ3ZW50VG8iLCJmcmllbmRzV2l0aExpbmsiLCJmcmllbmRzIiwid29ya2VkQXRMaW5rIiwid29ya1BsYWNlIiwibGl2ZXNJbkxpbmsiLCJjb3VudHJ5IiwiZnJvbUxpbmsiLCJzdGF0ZSIsImJ1aWxkVmlldyIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwidXNlck5hbWUiLCJhZGRyZXNzIiwiYWRyZXNzIiwiYWRkcmVzczIiLCJhZHJlc3MyIiwiemlwIiwiVXRpbHMiLCJzb3J0aW5nQ29uZmlnIiwicGFnZSIsInNvcnQiLCJhIiwiYiIsImZpbHRlciIsInJvbGUiLCJleHAiLCJSZWdFeHAiLCJ3cmFwcGVyRWwiLCJ0ZW1wbGF0ZUlkIiwiY2xvbiIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJhcHBlbmRDaGlsZCIsInZpZXdzIiwicm91dGVOYW1lIiwibG9jYXRpb24iLCJoYXNoIiwiYnRucyIsInBhcmVudEVsZW1lbnQiLCJlbCIsIndyYXBwZXIiLCJyb3V0ZUNvbmZpZyIsImluaXRUZW1wbGF0ZSIsInVwZGF0ZVJvdXRlIiwicmVwbGFjZSIsImlzTG9nZ2VkSW4iLCJyb3V0ZSIsIndpbmRvdyJdLCJtYXBwaW5ncyI6InVFQUNhQSxFQUFPQyxFQUFNQyxFQUFVQyxRQUM3QkgsTUFBUUEsT0FDUkMsS0FBT0EsT0FDUEMsU0FBV0EsT0FDWEMsTUFBUUEsT0FLUEMsc0JBSUdDLElBQUksdUJBQ0xMLE1BQU1NLFVBQVVDLEtBQU1DLFNBQ3JCUCxLQUFLRyxLQUFLSSxXQUNQSCxJQUFJLGlCQUFrQkcsK0VDZnZCQyxPQUFTLGlEQUlQQyxNQUFNQyxLQUFLRixRQUFRRixLQUFLSyxHQUFZQSxFQUFTQyxRQUNuRE4sS0FBS0MsWUFDTUgsSUFBSSwwQkFDUFMsY0FBZ0JOLEVBQ2RBLDZFQ1JOTyx5QkFDSUMsU0FBU0MsY0FBYyxpQkFFL0JDLDRCQUNBQyxvQkFJRlgsUUFDQ1ksZUFBZVosa0JBR05BLFFBQ1RhLFlBQVliLFFBQ1pjLGFBQWFYLEtBQUtRLHlCQUdYWCxRQUNQVSxvQkFBc0JWLEVBQUtlLElBQUksQ0FBQ0MsRUFBTUMsVUFFaENkLEtBQUtlLFNBQVNGLEVBQUtHLFVBQ2xCaEIsS0FBS2lCLFdBQVdKLEVBQUtLLGFBQ25CTCxFQUFLTSxXQUdkWCxvQkFD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QUFFdEksTUFBUXVJLEVBQUV2SSxNQUFRLEdBQUssR0FFN0JvSSxTQUVGQSxHQUNFQSxFQUFLSSxPQUFRckssR0FDSSxTQUFiQSxFQUFLc0ssV0FHWkwsR0FDR0EsRUFBS0ksT0FBUXJLLEdBQ0ksUUFBYkEsRUFBS3NLLFdBR1pMLFFBQ0FNLEVBQU0sSUFBSUMsT0FBT2pJLE1BQU1FLE9BQU9YLE1BQU8sWUFDbENtSSxFQUFLSSxPQUFPckssR0FDUnVLLEVBQUk5RixLQUFLekUsRUFBS0ssNkJBTW5Cb0ssRUFBV0MsT0FFMUJDLEVBRFduTCxTQUFTQyxrQkFBa0JpTCxLQUN0QkUsUUFBUUMsV0FBVSxLQUM1Qm5LLFVBQVksS0FDWm9LLFlBQVlILG1CQUdMSSxLQUNOM0UsUUFBUXFDLE1BQ0ZuQyxVQUFVQyxPQUFPLDBCQUlqQndFLEtBQ04zRSxRQUFRcUMsTUFDRm5DLFVBQVVFLElBQUksNEJBSVp3RSxVQUNQQyxTQUFTQyxLQUFNLElBQU1GLDZCQVNyQixxQkFHTUcsS0FDWi9FLFFBQVFxQyxNQUNHMkMsY0FBYzlFLFVBQVVFLElBQUksa0NBR3hCMkUsS0FDZi9FLFFBQVFxQyxNQUNHMkMsY0FBYzlFLFVBQVVDLE9BQU8sNEJBR2pDTCxPQUNYLElBQUlDLEtBQU9ELEVBRURBLEVBRFJDLEVBQU1BLEdBRUpDLFFBQVFDLE1BQ0ZDLFVBQVVDLE9BQU8sT0FBUyxVQUMxQkQsVUFBVUUsSUFBSUwsbUJBS2RrRixLQUNYL0UsVUFBVUMsT0FBTyxzQkFFUDhFLEtBQ1YvRSxVQUFVRSxJQUFJIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBHYWxsZXJ5Q29udHJvbGxlciB7IFxyXG5cdGNvbnN0cnVjdG9yKG1vZGVsLCB2aWV3LCBvYnNlcnZlciwgdXRpbHMpIHtcclxuXHRcdHRoaXMubW9kZWwgPSBtb2RlbDtcclxuXHRcdHRoaXMudmlldyA9IHZpZXc7XHJcblx0XHR0aGlzLm9ic2VydmVyID0gb2JzZXJ2ZXI7XHJcblx0XHR0aGlzLnV0aWxzID0gdXRpbHM7XHJcblx0XHQvLyAgIHRoaXMucGFnZUNvbmZpZyA9IHtcclxuXHRcdFx0Ly8gICAgICAgaXRlbXNQZXJQYWdlIDogMTAsXHJcblx0XHRcdC8vIGN1cnJlbnRQYWdlOiAwXHJcblx0XHRcdC8vIH1cclxuXHRcdFx0dGhpcy5pbml0KCk7XHJcbiAgICB9ICAgICAgICBcclxuXHRcdFxyXG5cdFx0aW5pdCgpe1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcImdhbGxlcnkgaW5pdGVkXCIpXHJcblx0XHRcdFx0XHR0aGlzLm1vZGVsLmdldERhdGEoKS50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdFx0XHRcdHRoaXMudmlldy5pbml0KGRhdGEpO1xyXG5cdFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcImdhbGxlcnktZGF0YTogXCIsIGRhdGEpXHJcblx0XHRcdFx0XHQgICAgLy90aGlzLmluaXRMaXN0ZW5lcnMoKVxyXG5cdFx0XHRcdFx0ICAgIC8vIHRoaXMudmlldy5idWlsZFVzZXJzTGlzdCh0aGlzLmdldE5leHRQYWdlKCkpO1xyXG5cdFx0XHRcdFx0ICAgIC8vIHRoaXMuaXNMYXN0UGFnZSgpO1xyXG5cdFx0XHRcdFx0fSk7IFx0XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdC8vaW5pdExpc3RlbmVycygpIHtcclxuXHJcblxyXG5cdFx0Ly8gdGhpcy52aWV3LkRPTUVsZW1lbnRzLnVzZXJMaXN0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnRhYmxlTGluZUhhbmRsZXIuYmluZCh0aGlzKSk7XHJcblx0XHRcclxuXHRcdC8vIHRoaXMudmlldy5ET01FbGVtZW50cy5zZWFyY2guYWRkRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuc2VhcmNoSGFuZGxlci5iaW5kKHRoaXMpKTtcclxuXHRcdC8vIHRoaXMudmlldy5ET01FbGVtZW50cy5lbWFpbERyb3Bkb3duLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLnNvcnRpbmdIYW5kbGVyLmJpbmQodGhpcykpO1xyXG5cdFx0Ly8gdGhpcy52aWV3LkRPTUVsZW1lbnRzLnJvbGVEcm9wZG93bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5zb3J0aW5nSGFuZGxlci5iaW5kKHRoaXMpKTtcclxuXHRcdFxyXG4gICAgLy8gICAgIHRoaXMudmlldy5ET01FbGVtZW50cy5uZXh0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmdldE5leHRQYWdlSGFuZGxlci5iaW5kKHRoaXMpKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyB0YWJsZUxpbmVIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICAvLyAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdC8vIGxldCBpc0J1dHRvbiA9IGV2ZW50LnRhcmdldC5nZXRBdHRyaWJ1dGUoXCJkYXRhLXJvdy1pZFwiKTtcclxuXHRcdC8vIGlzQnV0dG9uID8gdGhpcy5vcGVuRGV0YWlsKGlzQnV0dG9uKSA6IHRoaXMudmlldy5zZWxlY3RUYWJsZUxpbmUoZXZlbnQpO1xyXG5cdFx0Ly8gfVxyXG5cclxuXHRcdC8vIG9wZW5EZXRhaWwoYnV0dG9uSWQpIHtcclxuXHRcdC8vIFx0bGV0IHVzZXIgPSB0aGlzLm1vZGVsLmdldFVzZXJCeUlkKGJ1dHRvbklkKS50aGVuKChkYXRhKSA9PiB7XHJcblx0XHQvLyBcdFx0XHRcdFx0dGhpcy52aWV3LnNob3dTaW5nbGVVc2VyKGRhdGEpO1xyXG5cdFx0Ly8gXHRcdFx0fSk7IFx0XHJcblx0XHQvLyBcdH1cclxuXHRcdFx0XHJcblx0XHQvLyBcdHNlYXJjaEhhbmRsZXIoZXZlbnQpIHtcclxuXHRcdC8vIFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdC8vIFx0bGV0IHZhbHVlID0gZXZlbnQudGFyZ2V0LnZhbHVlO1xyXG5cdFx0Ly8gXHRpZiAoZXZlbnQua2V5Q29kZSA9PT0gMTMgJiYgKHZhbHVlLmxlbmd0aCA9PSAwIHx8IHZhbHVlLmxlbmd0aCA+IDIpKSB7XHJcblx0XHQvLyBcdFx0dGhpcy5wYWdlQ29uZmlnLmN1cnJlbnRQYWdlID0gMDtcclxuXHRcdC8vIFx0XHRcdFx0XHR0aGlzLnZpZXcuY2xlYXJMaXN0KCk7XHJcblx0XHQvLyBcdFx0dGhpcy52aWV3LmJ1aWxkVXNlcnNMaXN0KHRoaXMuZ2V0TmV4dFBhZ2UoKSwgdGhpcy51dGlscy5zb3J0aW5nQ29uZmlnW1wiRmluZFwiXSk7XHJcblx0XHQvLyBcdH1cclxuXHRcdC8vIH1cclxuXHJcblx0XHQvLyBzb3J0aW5nSGFuZGxlcihldmVudCkge1xyXG5cdFx0Ly8gXHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0Ly8gXHR0aGlzLnZpZXcudXBkYXRlQnV0dG9uVGV4dChldmVudCk7XHJcblx0XHQvLyBcdHRoaXMuYXBwbHlTb3J0aW5nTWV0aG9kKHRoaXMudmlldy5nZXRTb3J0aW5nVHlwZShldmVudCkpO1xyXG5cdFx0Ly8gfVxyXG5cdFx0XHRcclxuXHRcdC8vIFx0Z2V0TmV4dFBhZ2VIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHQvLyBcdFx0XHRldmVudCAmJiBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0Ly8gXHRcdFx0dGhpcy52aWV3LmJ1aWxkVXNlcnNMaXN0KHRoaXMuZ2V0TmV4dFBhZ2UoKSk7XHJcblx0XHQvLyBcdFx0XHR0aGlzLmlzTGFzdFBhZ2UoKTsgXHJcblx0XHQvLyBcdH1cclxuXHJcblx0XHQvLyBhcHBseVNvcnRpbmdNZXRob2Qoc29ydGluZ1R5cGUpIHtcclxuXHRcdC8vIFx0XHRcdGlmICghc29ydGluZ1R5cGUpe3JldHVybn1cclxuXHRcdC8vIFx0dGhpcy5wYWdlQ29uZmlnLmN1cnJlbnRQYWdlID0gMDtcclxuXHRcdC8vIFx0XHRcdHRoaXMudmlldy5jbGVhckxpc3QoKTtcclxuXHRcdC8vIFx0dGhpcy52aWV3LmJ1aWxkVXNlcnNMaXN0KHRoaXMuZ2V0TmV4dFBhZ2UoKSwgdGhpcy51dGlscy5zb3J0aW5nQ29uZmlnW3NvcnRpbmdUeXBlXSk7XHJcblx0XHQvLyB9XHJcblxyXG5cdFx0Ly8gXHRnZXROZXh0UGFnZSgpe1xyXG5cdFx0Ly8gXHRsZXQgc3RhcnQgPSB0aGlzLnBhZ2VDb25maWcuaXRlbXNQZXJQYWdlICogdGhpcy5wYWdlQ29uZmlnLmN1cnJlbnRQYWdlO1xyXG5cdFx0Ly8gXHRsZXQgZW5kID0gdGhpcy5wYWdlQ29uZmlnLml0ZW1zUGVyUGFnZSArIHN0YXJ0O1xyXG5cdFx0Ly8gXHR0aGlzLnBhZ2VDb25maWcuY3VycmVudFBhZ2UrKztcclxuXHRcdC8vIFx0cmV0dXJuIHRoaXMubW9kZWwudXNlcnNMaXN0RGF0YS5zbGljZShzdGFydCwgZW5kKTtcclxuXHRcdC8vIFx0fVxyXG5cdFx0XHRcclxuXHRcdC8vIFx0aXNMYXN0UGFnZSgpIHtcclxuXHRcdC8vIFx0XHRcdGlmICh0aGlzLmlzTWF4UGFnZSgpKXtcclxuXHRcdC8vIFx0XHRcdFx0XHR0aGlzLnZpZXcuaGlkZU5leHRQYWdlKCk7XHRcclxuXHRcdC8vIFx0XHRcdFx0XHR0aGlzLmNvdW50U3RhdHMoKTtcclxuXHRcdC8vIFx0XHRcdH1cclxuXHRcdC8vIFx0fVxyXG5cclxuXHRcdC8vIGlzTWF4UGFnZSgpIHtcclxuXHRcdC8vIFx0cmV0dXJuICh0aGlzLnBhZ2VDb25maWcuY3VycmVudFBhZ2UgKiB0aGlzLnBhZ2VDb25maWcuaXRlbXNQZXJQYWdlKSA+PSB0aGlzLm1vZGVsLnVzZXJzTGlzdERhdGEubGVuZ3RoO1xyXG5cdFx0Ly8gfVxyXG5cclxuXHRcdC8vIGNvdW50U3RhdHMoKXtcclxuXHRcdC8vIFx0bGV0IHN0YXRzID0gdGhpcy5tb2RlbC51c2Vyc0xpc3REYXRhLnJlZHVjZSgoc3VtLCBpdGVtKSA9PiB7XHJcblx0XHQvLyBcdFx0KGl0ZW0ucm9sZSA9PSBcIkFkbWluXCIpID8gc3VtLmFkbWlucysrIDpcdHN1bS51c2VycysrO1xyXG5cdFx0Ly8gXHRcdHJldHVybiBzdW07XHJcblx0XHQvLyBcdH0sIHthZG1pbnM6MCwgdXNlcnM6MH0pO1xyXG5cdFx0Ly8gXHR0aGlzLnZpZXcuc2hvd1N0YXRzKHN0YXRzKTtcclxuXHRcdC8vIH1cclxuXHRcdFxyXG4gICAgXHJcbn1cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEdhbGxlcnlNb2RlbCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLmdldFVybCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvZ2FsbGVyeSc7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0RGF0YSgpIHtcclxuICAgICAgICByZXR1cm4gZmV0Y2godGhpcy5nZXRVcmwpLnRoZW4ocmVzcG9uY2UgPT4gcmVzcG9uY2UuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkdhbGxlcnkgaXMgbG9hZGVkXCIpO1xyXG4gICAgICAgICAgICB0aGlzLnVzZXJzTGlzdERhdGEgPSBkYXRhO1xyXG4gICAgICAgICAgICByZXR1cm4gZGF0YTtcclxuICAgICAgICB9KSAgICAgICAgIFxyXG4gICAgfVxyXG5cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHYWxsZXJ5VmlldyB7ICAgICAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuRE9NRWxlbWVudHMgPSB7XHJcblx0XHRcdFx0XHRyZXN1bHRCbG9jazpkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcmVzdWx0JyksXHJcbiAgICAgICAgfTsgICAgIFxyXG5cdFx0XHQgdGhpcy5yZWFkeURhdGFGb3JHYWxsZXJ5ID0gW107XHJcblx0XHRcdCB0aGlzLnZpc2libGVEYXRhID0gW107XHJcbiAgICAgICAgXHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGluaXQoZGF0YSl7XHJcblx0XHRcdHRoaXMucmVmcmVzaEdhbGxlcnkoZGF0YSk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmVmcmVzaEdhbGxlcnkoZGF0YSl7XHJcblx0XHRcdHRoaXMucHJlcGFyZURhdGEoZGF0YSk7XHJcblx0XHRcdHRoaXMuYml1bGRHYWxsZXJ5KHRoaXMudmlzaWJsZURhdGEpO1xyXG5cdFx0fTtcclxuXHRcdFxyXG5cdFx0cHJlcGFyZURhdGEgKGRhdGEpIHtcclxuXHRcdFx0dGhpcy5yZWFkeURhdGFGb3JHYWxsZXJ5ID0gZGF0YS5tYXAoKGl0ZW0sIGluZGV4KSA9PiB7ICAgICAgICAgICAgICAgICBcclxuXHRcdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR1cmw6IHRoaXMudXJsRm9tYXQoaXRlbS51cmwpLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRuYW1lOiB0aGlzLm5hbWVGb3JtYXQoaXRlbS5uYW1lKSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0aXRlbUlEOiBpdGVtLmlkXHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0fSk7XHJcblx0XHRcdHRoaXMudmlzaWJsZURhdGEgPSBbXTtcclxuXHRcdFx0dGhpcy52aXNpYmxlRGF0YS5wdXNoLmFwcGx5KHRoaXMudmlzaWJsZURhdGEsXHR0aGlzLnJlYWR5RGF0YUZvckdhbGxlcnkpO1xyXG5cdFx0fTtcclxuXHJcblx0XHRiaXVsZEdhbGxlcnkgKHZpc2libGVEYXRhKXsgIFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnJlc3VsdEJsb2NrLmlubmVySFRNTCA9IFwiXCI7XHJcblx0XHRcdGZvciAobGV0IGkgPSAwOyBpIDwgdmlzaWJsZURhdGEubGVuZ3RoOyBpKyspIHsgICAgXHJcblx0XHRcdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnJlc3VsdEJsb2NrLmlubmVySFRNTCArPSB0aGlzLmNyZWF0ZUdhbGxlcnlJdGVtKHZpc2libGVEYXRhW2ldKTsgXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRjcmVhdGVHYWxsZXJ5SXRlbSAoaXRlbSkge1xyXG5cdFx0XHRyZXR1cm4gXHRgPGRpdiBjbGFzcz1cImNvbC1tZC00IGdhbGxlcnktY2FyZFwiIGlkID0gJHtpdGVtLml0ZW1JRH0+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZCBtYi00IGJveC1zaGFkb3cgZ2FsbGVyeS1pdGVtXCIgPlxyXG5cdFx0XHRcdFx0XHRcdDxpbWcgc3JjPVwiJHtpdGVtLnVybH1cIiBhbHQ9XCIke2l0ZW0ubmFtZX1cIiBjbGFzcz1cImNhcmQtaW1nLXRvcFwiIGRhdGEtc3JjPVwiaG9sZGVyLmpzLzEwMHB4MjI1P3RoZW1lPXRodW1iJmFtcDtiZz01NTU5NWMmYW1wO2ZnPWVjZWVlZiZhbXA7dGV4dD1UaHVtYm5haWxcIiBkYXRhLWhvbGRlci1yZW5kZXJlZD1cInRydWVcIiBzdHlsZT1cImhlaWdodDogMjI1cHg7IHdpZHRoOiAxMDAlOyBkaXNwbGF5OiBibG9jaztcIj5cclxuXHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZC1ib2R5XCI+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJjYXJkLXRleHQgbWItNFwiPiR7aXRlbS5uYW1lfTwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYnRuLWdyb3VwXCI+XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG4gYnRuLW91dGxpbmUtc2Vjb25kYXJ5XCI+VmlldzwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuIGJ0bi1vdXRsaW5lLXNlY29uZGFyeSBlZGl0XCI+RWRpdDwvYnV0dG9uPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGRpdiAgbmFtZSA9IFwiZGVsZXRlLWltZ1wiIGNsYXNzID0gXCJidG4gYnRuLWRhbmdlclwiICB0aXRsZSA9IFwi0KPQtNCw0LvQuNGC0Ywg0LTQsNC90L3QvtC1INC40LfQvtCx0YDQsNC20LXQvdC40LVcIj4g0KPQtNCw0LvQuNGC0YwgPC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHQ8L2Rpdj5gO1xyXG5cdFx0fTtcclxuXHRcdG5hbWVGb3JtYXQgKG5hbWUpe1xyXG5cdFx0XHRyZXR1cm4gIG5hbWUgPyBuYW1lWzBdLnRvVXBwZXJDYXNlKCkgKyBuYW1lLnN1YnN0cmluZygxKS50b0xvd2VyQ2FzZSgpIDogXCJMb2huIERvaFwiO1xyXG5cdFx0fTtcclxuXHRcdHVybEZvbWF0ICAodXJsKXtcclxuXHRcdFx0XHRyZXR1cm4gICh1cmwuaW5kZXhPZihcImh0dHBzOi8vXCIpKSA9PT0gLTEgPyBgaHR0cHM6Ly8ke3VybH1gIDogIHVybDsgXHJcblx0XHR9O1xyXG5cclxuXHJcbn1cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIE9ic2VydmVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5ldmVudHMgPSB7fTtcbiAgICB9XG5cbiAgICBzdWJzY3JpYmVFdmVudChuYW1lLCBmdW5jKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzW25hbWVdID0gZnVuYztcbiAgICB9XG4gICAgXG4gICAgY2FsbEV2ZW50KG5hbWUsIGFyZykge1xuICAgICAgICBpZiAodGhpcy5ldmVudHNbbmFtZV0pIHtcbiAgICAgICAgICAgIHRoaXMuZXZlbnRzW25hbWVdKGFyZyk7XG4gICAgICAgIH1cbiAgICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBMb2dpbkNvbnRyb2xsZXIgeyBcclxuXHRjb25zdHJ1Y3Rvcihtb2RlbCwgdmlldywgdXRpbHMpIHtcclxuXHRcdHRoaXMubG9naW5Nb2RlbCA9IG1vZGVsO1xyXG5cdFx0dGhpcy5sb2dpblZpZXcgPSB2aWV3O1xyXG5cdFx0dGhpcy51dGlscyA9IHV0aWxzO1xyXG5cdFx0dGhpcy5pbml0KCk7XHJcblx0XHQvL3RoaXMudXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbG9naW4vXCJcclxuXHR9ICAgIFxyXG5cclxuXHRpbml0KCkge1xyXG5cdFx0Ly90aGlzLmxvZ2luVmlldy5oaWRlQnV0dG9ucygpO1xyXG5cdFx0dGhpcy5maWxsU3RhcnRQYWdlVXNlckRhdGEoKTtcclxuXHRcdHRoaXMuYmluZEV2ZW50cygpO1xyXG5cclxuXHR9XHJcblxyXG5cdGZpbGxTdGFydFBhZ2VVc2VyRGF0YSAoKXtcclxuXHRcdGxldCBjaGVja0JveFN0YXR1cyA9IHRoaXMubG9naW5Nb2RlbC5nZXRDaGVja2JveFN0YXR1cygpO1xyXG5cdFx0aWYgKGNoZWNrQm94U3RhdHVzID09IHRydWUpe1xyXG5cdFx0XHR0aGlzLmxvZ2luTW9kZWwuZ2V0RGF0YSgpLnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0dGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMuY2hlY2tCb3hSZW1lbWVtYmVyTWUuY2hlY2tlZCA9IHRydWU7XHRcclxuXHRcdFx0XHR0aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5lbWFpbC52YWx1ZSA9IGRhdGEubG9naW47ICAgIFxyXG5cdFx0XHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLnBhc3N3b3JkLnZhbHVlID0gZGF0YS5wYXNzd29yZDtcclxuXHRcdFx0fSlcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLmNoZWNrQm94UmVtZW1lbWJlck1lLmNoZWNrZWQgPSBmYWxzZTtcdFxyXG5cdFx0XHR0aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5lbWFpbC52YWx1ZSA9IFwiXCI7XHJcblx0XHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLnBhc3N3b3JkLnZhbHVlID0gXCJcIjtcclxuXHRcdH1cclxuXHR9O1xyXG5cdFx0XHJcblx0YmluZEV2ZW50cygpIHtcclxuXHRcdC8vdGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMuZW50ZXJCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaW5pdFZhbGlkYXRpb24uYmluZCh0aGlzKSk7XHJcblx0XHR0aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5zdWJtaXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaW5pdFZhbGlkYXRpb24uYmluZCh0aGlzKSk7XHJcblx0XHR0aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5leGl0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCB0aGlzLmluaXRMb2dPdXQuYmluZCh0aGlzKSk7XHJcblx0fVxyXG5cclxuXHRpbml0VmFsaWRhdGlvbihldmVudCl7XHJcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0aWYoZXZlbnQudGFyZ2V0LmlkID09ICdzdWJtaXRCdG4nKXtcclxuXHRcdFx0dGhpcy5sb2dpblZpZXcuaGlkZUFsZXJ0TXNncygpO1xyXG5cdFx0XHRsZXQgY3JlZGVudGlhbHMgPSB0aGlzLmxvZ2luVmlldy5nZXRMb2dBbmRQYXNzKCk7XHJcblx0XHRcdGxldCB2YWxpZFJlc3VsdCA9IHRoaXMubG9naW5Nb2RlbC5jaGVja0ZpZWxkcyAoY3JlZGVudGlhbHMubG9naW4sIGNyZWRlbnRpYWxzLnBhc3N3b3JkKTtcclxuXHRcdFx0aWYodmFsaWRSZXN1bHQgPT0gdHJ1ZSl7XHJcblx0XHRcdFx0dGhpcy5sb2dpbk1vZGVsLmxvZ0FuZFBhc3NWYWxpZGF0aW9uKGNyZWRlbnRpYWxzKVxyXG5cdFx0XHRcdC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHRcdFx0aWYgKGRhdGEuc3RhdHVzKSB7XHJcblx0XHRcdFx0XHRcdHRoaXMuZ2V0QW5kU2V0Q2hlY2tib3hTdGF0dXMoKTtcclxuXHRcdFx0XHRcdFx0dGhpcy51dGlscy5uYXZpZ2F0ZVRvKFwibWFpblBhZ2VcIik7XHJcblx0XHRcdFx0XHRcdHRoaXMubG9naW5WaWV3LnNob3dCdXR0b25zKCk7XHJcblx0XHRcdFx0XHRcdHRoaXMubG9naW5WaWV3LmhpZGVFbnRlckJ0bigpO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHR0aGlzLmxvZ2luVmlldy5zaG93RXJyb3JNc2coXCIxXCIpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0dGhpcy5sb2dpblZpZXcuc2hvd0Vycm9yTXNnKHZhbGlkUmVzdWx0KVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cdFxyXG5cdGluaXRMb2dPdXQoKXtcclxuXHRcdHRoaXMubG9naW5Nb2RlbC5sb2dPdXQoKTtcclxuXHRcdHRoaXMubG9naW5WaWV3LmhpZGVCdXR0b25zKCk7XHJcblx0XHR0aGlzLmxvZ2luVmlldy5zaG93RW50ZXJCdG4oKTtcclxuXHRcdHRoaXMudXRpbHMubmF2aWdhdGVUbyhcIlwiKTtcclxuXHRcdHRoaXMuZ2V0QW5kU2V0Q2hlY2tib3hTdGF0dXMoKTtcclxuXHR9XHJcblx0Z2V0QW5kU2V0Q2hlY2tib3hTdGF0dXMoKXtcclxuXHRcdGlmKHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLmNoZWNrQm94UmVtZW1lbWJlck1lLmNoZWNrZWQgPT0gdHJ1ZSl7XHJcblx0XHRcdHRoaXMubG9naW5Nb2RlbC5zZXRDaGVja2JveFN0YXR1cygndHJ1ZScpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5sb2dpbk1vZGVsLnNldENoZWNrYm94U3RhdHVzKCdmYWxzZScpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdFx0Y2xhc3MgTG9naW5Nb2RlbCB7XHJcblx0Y29uc3RydWN0b3IoKSB7XHJcblx0XHR0aGlzLnVybEFkbWluVXNlciA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2FkbWluVXNlclwiO1xyXG5cdFx0dGhpcy51cmxMb2dpbiA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL2xvZ2luXCI7O1xyXG5cdH1cclxuXHRcdFxyXG5cdGdldERhdGEoKSB7XHJcblx0XHRyZXR1cm4gZmV0Y2godGhpcy51cmxBZG1pblVzZXIpLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG5cdFx0LnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coXCJJbml0aWFsIGRhdGEgaXMgbG9hZGVkXCIpO1xyXG5cdFx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cdFx0XHRcdHJldHVybiBkYXRhO1xyXG5cdFx0fSkgICAgICAgICBcclxuXHR9XHJcblx0XHRcclxuXHRcclxuXHRnZXRDaGVja2JveFN0YXR1cygpe1xyXG5cdFx0aWYobG9jYWxTdG9yYWdlLmdldEl0ZW0oXCJyZW1lbWJlclwiKSA9PSBcInRydWVcIil7XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHR9XHJcblx0XHRcclxuXHR9XHJcblx0c2V0Q2hlY2tib3hTdGF0dXMoY2hlY2tlZCl7XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcInJlbWVtYmVyXCIsIGNoZWNrZWQgKTtcclxuXHR9XHJcblxyXG5cdGNoZWNrU2Vzc2lvbigpIHtcclxuXHRcdGxldCBjcmVkZW50aWFscyA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdjcmVkZW50aWFscycpO1xyXG5cdFx0aWYoY3JlZGVudGlhbHMpIHtcclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblx0fVxyXG5cdFxyXG5cdHNldFVzZXJJbmZvKG9iail7XHJcblx0XHRsb2NhbFN0b3JhZ2Uuc2V0SXRlbShcImNyZWRlbnRpYWxzXCIgLCBKU09OLnN0cmluZ2lmeShvYmopKVxyXG5cdH07XHJcblxyXG5cdGxvZ091dCgpe1xyXG5cdFx0bG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oJ2NyZWRlbnRpYWxzJyk7XHJcblx0fVxyXG5cclxuXHJcblx0bG9nQW5kUGFzc1ZhbGlkYXRpb24gKGNyZWRlbnRpYWxzKSB7XHJcblx0XHRsZXQgdXJsID0gdGhpcy51cmxMb2dpbjtcclxuXHRcdGxldCBwYXJhbXMgPSB7XHJcblx0XHRcdG1ldGhvZDogJ1BPU1QnLFxyXG5cdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRib2R5OiBKU09OLnN0cmluZ2lmeShjcmVkZW50aWFscylcclxuXHRcdH07XHJcblx0XHRcdFxyXG5cdFx0cmV0dXJuIGZldGNoKHVybCAsIHBhcmFtcylcclxuXHRcdC50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuXHRcdC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHRcdGlmIChkYXRhLnN0YXR1cykge1xyXG5cdFx0XHRcdFx0dGhpcy5zZXRVc2VySW5mbyhjcmVkZW50aWFscylcclxuXHRcdFx0XHRcdFx0Ly9sb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnY3JlZGVudGlhbHMnLCBKU09OLnN0cmluZ2lmeShjcmVkZW50aWFscykpO1xyXG5cdFx0XHRcdH0gXHJcblx0XHRcdFx0cmV0dXJuIGRhdGE7XHJcblx0XHR9KTtcclxuXHJcblxyXG5cdH07XHJcblxyXG5cdGNoZWNrRmllbGRzIChlbWFpbCwgcGFzcyl7XHJcblx0XHRpZighZW1haWwpe3JldHVybiAnMid9XHJcblx0XHRpZighcGFzcyl7cmV0dXJuICczJ31cclxuXHRcdGlmKCF0aGlzLmNoZWNrRW1haWwoZW1haWwpKXtyZXR1cm4gJzQnfVxyXG5cdFx0aWYoIXRoaXMuY2hlY2tQYXNzd29yZChwYXNzKSl7cmV0dXJuICc1J31cclxuXHRcdGVsc2Uge3JldHVybiB0cnVlfVxyXG5cdH07XHJcblx0XHJcblx0Y2hlY2tFbWFpbCAoZW1haWwpIHsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXHJcblx0XHRsZXQgcmVnID0gL15bXlxcc0BdK0BbXlxcc0BdK1xcLlteXFxzQF0rJC87XHJcblx0XHRyZXR1cm4gcmVnLnRlc3QoZW1haWwpO1xyXG5cdH07XHJcblx0Y2hlY2tQYXNzd29yZChwYXNzd29yZCl7XHJcblx0XHRpZihwYXNzd29yZC5sZW5ndGggPj0gOCl7XHJcblx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9IGVsc2UgeyBcclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fVxyXG5cdH07XHJcblx0XHJcblxyXG5cdHNhdmVEYXRhKGl0ZW0pIHsgICAgICAgICBcclxuXHRcdGNvbnNvbGUubG9nKFwiU2F2aW5nIGl0ZW0uLi4gXCIgKyBpdGVtLm5hbWUpO1xyXG5cdFx0bGV0IGlwaG9uZSA9IHtcclxuXHRcdFx0XCJuYW1lXCI6IFwiU2F2ZWQgaVBob25lXCIsXHJcblx0XHRcdFwicHJpY2VcIjogMTI0NTgsXHJcblx0XHRcdFwicG9wdWxhclwiOiB0cnVlLFxyXG5cdFx0XHRcImRhdGVcIjogMTQ2NzQ0MDIwM1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIG5ldyBQcm9taXNlKFxyXG5cdFx0XHRmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHsgICAgICAgICAgICBcclxuXHRcdFx0XHRyZXNvbHZlKGlwaG9uZSk7ICAgICAgICAgIFxyXG5cdFx0XHR9XHJcblx0XHQpO1xyXG5cdH1cclxuXHRcclxuXHR1cGRhdGVEYXRhKGNvdW50ZXIpIHtcclxuXHRcdGNvbnNvbGUubG9nKFwiVXBkYXRpbmcgaXRlbS4uLiBcIiArIGNvdW50ZXIpO1xyXG5cdFx0bGV0IHNhbXN1bmcgPSB7XHJcblx0XHRcdFwibmFtZVwiOiBcIlNhdmVkIFNhbXN1bmdcIixcclxuXHRcdFx0XCJwcmljZVwiOiAxMjQ1OCxcclxuXHRcdFx0XCJwb3B1bGFyXCI6IHRydWUsXHJcblx0XHRcdFwiZGF0ZVwiOiAxNDY3NDQwMjAzXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHNhbXN1bmcpO1xyXG5cdH1cclxuXHRzZXRMb2NhbFN0b3JHYWxsZXJ5SW5pdFN0YXR1cyhzdGF0dXMpe1xyXG5cdFx0bG9jYWxTdG9yYWdlLmlzR2FsbGVyeUluaXRlZCA9IHN0YXR1cztcclxuXHR9XHJcblx0Y2hhbmdlTG9jYWxTdG9yTG9nZ2VkSW5TdGF0dXMoc3RhdHVzKXtcclxuXHRcdGxvY2FsU3RvcmFnZS5pc1VzZXJMb2dnZWRJbiA9IHN0YXR1cztcclxuXHR9XHJcblx0Z2V0TG9jYWxTdG9yYWdlR2FsbGVyeVN0YXR1cygpe1xyXG5cdFx0cmV0dXJuIGxvY2FsU3RvcmFnZS5pc0dhbGxlcnlJbml0ZWQ7XHJcblx0fVxyXG5cdGdldElzVXNlckxvZ2dlZEluKCl7XHJcblx0XHRyZXR1cm4gbG9jYWxTdG9yYWdlLmlzVXNlckxvZ2dlZEluO1xyXG5cdH1cclxuXHJcblx0Y2hlY2tVc2VyKHVzZXJEYXRhKXtcclxuXHRcdGxldCB1cmwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2xvZ2luJztcclxuXHRcdGxldCBwYXJhbXMgPSB7XHJcblx0XHRcdG1ldGhvZDogJ1BPU1QnLFxyXG5cdFx0XHRoZWFkZXJzOiB7XHJcblx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRib2R5OiBKU09OLnN0cmluZ2lmeSh1c2VyRGF0YSlcclxuXHRcdH07XHJcblxyXG5cdFx0cmV0dXJuIGZldGNoKHVybCAsIHBhcmFtcykudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcblx0XHRcclxuXHR9XHJcblxyXG5cdFx0XHRcclxuXHRcdFx0XHJcblx0XHRcdFxyXG59XHJcblx0XHJcbiBcclxuIiwiZXhwb3J0IGRlZmF1bHRcdGNsYXNzIExvZ2luVmlldyB7XHJcblx0Y29uc3RydWN0b3IgKCl7XHJcblx0XHR0aGlzLkRPTUVsZW1lbnRzID0ge1xyXG5cdFx0XHRzdWJtaXRCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3N1Ym1pdEJ0blwiKSxcclxuXHRcdFx0Ly9lbnRlckJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZW50ZXJCdG5cIiksXHJcblx0XHRcdGV4aXRCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2V4aXRCdG5cIiksXHJcblx0XHRcdGVtYWlsIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbnB1dEVtYWlsXCIpLFxyXG5cdFx0XHRwYXNzd29yZCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5wdXRQYXNzd29yZFwiKSxcclxuXHRcdFx0Y2hlY2tCb3hSZW1lbWVtYmVyTWUgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lucHV0UmVtZW1iZXJcIiksXHJcblx0XHRcdFxyXG5cdFx0XHRsb2dpbkJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbG9naW5CdG5cIiksXHJcblx0XHRcdG1haW5QYWdlQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtYWluUGFnZUJ0blwiKSxcclxuXHRcdFx0cHJvZmlsZUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZUJ0blwiKSxcclxuXHRcdFx0Z2FsbGVyeUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FsbGVyeUJ0blwiKSxcclxuXHRcdFx0Y29udGFjdHNCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2NvbnRhY3RzQnRuXCIpLFxyXG5cdFx0XHRcclxuXHJcblx0XHRcdHNob3dVc2VyRGF0YUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2hvd1VzZXJEYXRhQnRuXCIpLFxyXG5cdFx0XHRzaG93R2FsbGVyeUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2hvd0dhbGxlcnlCdG5cIiksXHJcblxyXG5cclxuXHRcdFx0YWxlcnRNc2cgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FsZXJ0LW1lc3NhZ2VcIiksIFxyXG5cdFx0XHRub3RGaWxsZWRFbWFpbE1zZyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbm90RmlsbGVkRW1haWxNc2dcIiksXHJcblx0XHRcdG5vdEZpbGxlZFBhc3NNc2cgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25vdEZpbGxlZFBhc3NNc2dcIiksXHJcblx0XHRcdHdyb25nRW1haWxNc2cgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dyb25nRW1haWxNc2dcIiksXHJcblx0XHRcdHdyb25nUGFzc01zZyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd3JvbmdQYXNzTXNnXCIpXHJcblx0XHR9XHJcblx0fTtcclxuXHRcclxuXHRnZXRMb2dBbmRQYXNzKCl7XHJcblx0XHRsZXQgY3JlZGVudGlhbHMgPSB7XHJcblx0XHRcdFwibG9naW5cIiA6IHRoaXMuRE9NRWxlbWVudHMuZW1haWwudmFsdWUsXHJcblx0XHRcdFwicGFzc3dvcmRcIiA6IHRoaXMuRE9NRWxlbWVudHMucGFzc3dvcmQudmFsdWVcclxuXHRcdH1cclxuXHRcdHJldHVybiBjcmVkZW50aWFscztcclxuXHR9O1xyXG5cdFxyXG5cdHNob3dFcnJvck1zZyhtc2dDb2RlKXtcclxuXHRcdHN3aXRjaChtc2dDb2RlKXtcclxuXHRcdFx0Y2FzZSAnMSc6XHJcblx0XHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMuYWxlcnRNc2ddfSk7XHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0XHJcblx0XHRcdGNhc2UgJzInOlxyXG5cdFx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLm5vdEZpbGxlZEVtYWlsTXNnXX0pXHJcblx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcclxuXHRcdFx0Y2FzZSAnMyc6XHJcblx0XHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMubm90RmlsbGVkUGFzc01zZ119KVxyXG5cdFx0XHRicmVhaztcclxuXHJcblx0XHRcdGNhc2UgJzQnOlxyXG5cdFx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLndyb25nRW1haWxNc2ddfSlcclxuXHRcdFx0YnJlYWs7XHJcblxyXG5cdFx0XHRjYXNlICc1JzpcclxuXHRcdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy53cm9uZ1Bhc3NNc2ddfSlcclxuXHRcdFx0YnJlYWs7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRoaWRlQWxlcnRNc2dzKCl7XHJcblx0XHR0aGlzLnNob3dIaWRlKHtcImhpZGVcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLmFsZXJ0TXNnLFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLm5vdEZpbGxlZEVtYWlsTXNnLCBcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5ub3RGaWxsZWRQYXNzTXNnLFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLndyb25nRW1haWxNc2csXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMud3JvbmdQYXNzTXNnXX0pO1xyXG5cdH07XHJcblx0XHJcblx0XHJcblx0c2hvd0FsZXJ0TXNnKCl7XHJcblx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLmFsZXJ0TXNnXX0pXHJcblx0fVxyXG5cdHNob3dOb3RGaWxsZWRFbWFpbE1zZygpe1xyXG5cdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy5ub3RGaWxsZWRFbWFpbE1zZ119KVxyXG5cdH1cclxuXHRzaG93Tm90RmlsbGVkUGFzc3dvcmRNc2coKXtcclxuXHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMubm90RmlsbGVkUGFzc01zZ119KVxyXG5cdH1cclxuXHRzaG93QmFkTG9naW5Nc2coKXtcclxuXHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMud3JvbmdFbWFpbE1zZ119KVxyXG5cdH07XHJcblx0XHJcblx0c2hvd0JhZFBhc3N3b3JkTXNnKCl7XHJcblx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLndyb25nUGFzc01zZ119KVxyXG5cdH07XHJcblx0LypcclxuXHRtYWluUGFnZUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjbWFpblBhZ2VcIiksXHJcblx0XHRcdHByb2ZpbGVCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3Byb2ZpbGVCdG5cIiksXHJcblx0XHRcdGdhbGxlcnlCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2dhbGxlcnlCdG5cIiksXHJcblx0XHRcdGNvbnRhY3RzQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNjb250YWN0c0J0blwiKSxcclxuXHQqL1xyXG5cdHNob3dCdXR0b25zKCl7XHJcblx0XHR0aGlzLnNob3dFbHMoW3RoaXMuRE9NRWxlbWVudHMubWFpblBhZ2VCdG4sXHJcblx0XHR0aGlzLkRPTUVsZW1lbnRzLnByb2ZpbGVCdG4sXHJcblx0XHR0aGlzLkRPTUVsZW1lbnRzLmdhbGxlcnlCdG4sXHJcblx0XHR0aGlzLkRPTUVsZW1lbnRzLmNvbnRhY3RzQnRuLFxyXG5cdFx0dGhpcy5ET01FbGVtZW50cy5leGl0QnRuXSlcclxuXHR9XHJcblx0XHJcblx0aGlkZUJ1dHRvbnMoKXtcclxuXHRcdHRoaXMuaGlkZUVscyhbdGhpcy5ET01FbGVtZW50cy5tYWluUGFnZUJ0bixcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5wcm9maWxlQnRuLFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmdhbGxlcnlCdG4sXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuY29udGFjdHNCdG4sXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuZXhpdEJ0bl0pXHJcblx0XHRcdFxyXG5cdFx0fVxyXG5cdGhpZGVFbnRlckJ0bigpe1xyXG5cdFx0dGhpcy5oaWRlRWxzKFt0aGlzLkRPTUVsZW1lbnRzLmxvZ2luQnRuXSk7XHJcblx0fVxyXG5cdHNob3dFbnRlckJ0bigpe1xyXG5cdFx0dGhpcy5zaG93RWxzKFt0aGlzLkRPTUVsZW1lbnRzLmxvZ2luQnRuXSk7XHJcblx0fVxyXG5cdHNob3dIaWRlKG9iamVjdCl7ICAgIFxyXG5cdFx0Zm9yKHZhciBrZXkgaW4gb2JqZWN0KSB7IFxyXG5cdFx0XHR2YXIga2V5ID0ga2V5O1xyXG5cdFx0XHR2YXIgdmFsdWUgPSBvYmplY3Rba2V5XTsgXHJcblx0XHRcdHZhbHVlLmZvckVhY2goRE9NRWxlbSA9PiB7XHJcblx0XHRcdFx0RE9NRWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwic2hvd1wiICwgXCJoaWRlXCIpO1xyXG5cdFx0XHRcdERPTUVsZW0uY2xhc3NMaXN0LmFkZChrZXkpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHNob3dFbHMoYXJyKXtcclxuXHRcdGFyci5mb3JFYWNoKERPTUVsZW0gPT4ge1xyXG5cdFx0XHRcdERPTUVsZW0uY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XHJcblx0XHR9KVxyXG5cdH1cclxuXHRoaWRlRWxzKGFycil7XHJcblx0XHRhcnIuZm9yRWFjaChET01FbGVtID0+IHtcclxuXHRcdFx0XHRET01FbGVtLmNsYXNzTGlzdC5hZGQoXCJoaWRlXCIpO1xyXG5cdFx0fSlcclxuXHR9XHJcblxyXG5cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluQ29udHJvbGxlciB7IFxyXG4gICAgY29uc3RydWN0b3IobW9kZWwsIHZpZXcsIHV0aWxzKSB7XHJcbiAgICAgICAgdGhpcy5tb2RlbCA9IG1vZGVsO1xyXG4gICAgICAgIHRoaXMudmlldyA9IHZpZXc7XHJcblx0XHRcdFx0dGhpcy51dGlscyA9IHV0aWxzO1xyXG5cdFx0XHRcdHRoaXMuaW5pdCgpO1xyXG5cdFx0XHRcdHRoaXMudXNlcnNBdmF0YXJzID0ge307XHJcblx0XHRcdFx0XHJcbiAgICB9ICAgICAgICBcclxuXHJcblx0XHJcblx0aW5pdCgpe1xyXG5cdFx0Y29uc29sZS5sb2coXCJtYWluIGluaXRlZFwiKVxyXG5cdFx0XHJcblx0XHR0aGlzLm1vZGVsLmdldFByb2ZpbGVEYXRhKCkudGhlbihkYXRhID0+IHtcclxuXHRcdFx0dGhpcy52aWV3LnByb2ZpbGVEYXRhID0gZGF0YVswXTtcclxuXHRcdH0pOyBcdFxyXG5cdFx0dGhpcy5tb2RlbC5nZXREYXRhKCkudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0XHR0aGlzLnZpZXcuaW5pdChkYXRhKTtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJtYWluLXBvc3RzOiBcIiwgZGF0YSlcclxuXHRcdH0pOyBcclxuXHRcdHRoaXMubW9kZWwuZ2V0QXZhdGFycygpXHJcblx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0dGhpcy51c2Vyc0F2YXRhcnMgPSBkYXRhO1xyXG5cdFx0fSk7IFxyXG5cdFx0dGhpcy5iaW5kRXZlbnRzKCk7XHJcblx0fVxyXG5cclxuXHRiaW5kRXZlbnRzKCl7XHJcblx0XHR0aGlzLnZpZXcuRE9NRWxlbWVudHMuYWRkUG9zdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiAsIHRoaXMuYWRkUG9zdC5iaW5kKHRoaXMpKVxyXG5cdFx0XHJcblx0fVxyXG5cdFxyXG5cdGFkZFBvc3QgKCl7XHJcblx0XHRsZXQgYXV0aG9yTmV3UG9zdCA9IFx0dGhpcy52aWV3LkRPTUVsZW1lbnRzLmF1dGhvck5ld1Bvc3QudmFsdWU7XHJcblx0XHRsZXQgdGV4dE5ld1Bvc3QgPSB0aGlzLnZpZXcuRE9NRWxlbWVudHMudGV4dE5ld1Bvc3QudmFsdWU7XHJcblx0XHRsZXQgbmV3RGF0ZSA9IG1vbWVudCgpO1xyXG5cdFx0bGV0IGF2YXRhciA9IHRoaXMuY2hvb3NlQXZhdGFyKHRoaXMudmlldy5ET01FbGVtZW50cy5hdXRob3JOZXdQb3N0LnZhbHVlICwgdGhpcy51c2Vyc0F2YXRhcnMpO1xyXG5cdFx0bGV0IHJlID0gL1xccysvO1xyXG5cdFx0XHJcblx0XHRsZXQgbmV3SW1hZ2UgPSB0aGlzLnZpZXcuRE9NRWxlbWVudHMubmV3SW1hZ2UudmFsdWUuc3BsaXQocmUpOztcclxuXHRcdC8vbGV0IG5hbWVMaXN0ID0gbmFtZXMuc3BsaXQocmUpO1xyXG5cclxuXHRcdFxyXG5cdFx0XHJcblx0XHRsZXQgcG9zdERhdGEgPSB7XHJcblx0XHRcdFwibmFtZVwiIDogYXV0aG9yTmV3UG9zdCxcclxuXHRcdFx0XCJkYXRlXCIgOiBuZXdEYXRlLFxyXG5cdFx0XHRcInVybFwiIDogYXZhdGFyLFxyXG5cdFx0XHRcInRleHRcIjogdGV4dE5ld1Bvc3QsIFxyXG5cdFx0XHRcImltYWdlc1wiIDogbmV3SW1hZ2VcclxuXHRcdH1cclxuXHRcdGNvbnNvbGUubG9nKFwicG9zdERhdGFcIiwgcG9zdERhdGEpXHJcblx0XHR0aGlzLm1vZGVsLnNhdmVQb3N0KHBvc3REYXRhKVxyXG5cdH07XHJcblxyXG5cdGNob29zZUF2YXRhcih2YWx1ZSAsIG9iail7XHJcblx0XHRjb25zb2xlLmxvZyhcInVzZXJBdmV0YXJzXCIsIG9iailcclxuXHRcdGZvcihsZXQga2V5IGluIG9iail7XHJcblx0XHRcdGlmIChrZXkgPT0gdmFsdWUpe1xyXG5cdFx0XHRcdHJldHVybiBvYmpba2V5XTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHJcblx0XHQvLyBpZih2YWx1ZSA9PSBcIkpvaG55XCIpe3JldHVybiBcImltZy9hdmF0YXItZGhnLnBuZ1wifVxyXG5cdFx0Ly8gaWYodmFsdWUgPT0gXCJHYXJyeVwiKXtyZXR1cm4gXCJpbWcvYXZhdGFyLWZhdC5qcGdcIn1cclxuXHRcdC8vIGlmKHZhbHVlID09IFwiSmFjb2IgVGhvcm50b25cIil7cmV0dXJuIFwiaW1nL2F2YXRhci1tZG8ucG5nXCJ9XHJcblx0XHQvLyBpZih2YWx1ZSA9PSBcIkNhcmxvc1wiKXtyZXR1cm4gXCJpbWcvc2N1bGwuanBnXCJ9XHJcblx0fTtcclxuXHJcblx0Ly8ge1xyXG5cdC8vIFx0XHRcIkpvaG55XCIgOiBcImltZy9hdmF0YXItZGhnLnBuZ1wiLFxyXG5cdC8vIFx0XCJHYXJyeVwiIDogXCJpbWcvYXZhdGFyLWZhdC5qcGdcIixcclxuXHQvLyBcdFwiSmFjb2IgVGhvcm50b25cIiA6IFwiaW1nL2F2YXRhci1tZG8ucG5nXCIsXHJcblx0Ly8gXHRcIkNhcmxvc1wiIDogXCJpbWcvc2N1bGwuanBnXCJcclxuXHQvLyB9XHJcblxyXG5cclxufVxyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWFpbk1vZGVsIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0XHR0aGlzLmdldFVybCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvcG9zdHMnO1xyXG5cdFx0XHR0aGlzLmF2YXRhcnNVcmwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2F2YXRhcnMnOyBcclxuXHRcdFx0dGhpcy5wcm9maWxlVXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wcm9maWxlJzsgXHJcbiAgICB9XHJcblxyXG5cdFx0Z2V0RGF0YSgpIHtcclxuXHRcdFx0cmV0dXJuIGZldGNoKHRoaXMuZ2V0VXJsKS50aGVuKHJlc3BvbmNlID0+IHJlc3BvbmNlLmpzb24oKSlcclxuXHRcdFx0LnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIkdhbGxlcnkgaXMgbG9hZGVkXCIpO1xyXG5cdFx0XHRcdFx0dGhpcy51c2Vyc0xpc3REYXRhID0gZGF0YTtcclxuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xyXG5cdFx0XHR9KSAgICAgICAgIFxyXG5cdH1cclxuXHJcblx0Z2V0QXZhdGFycygpe1xyXG5cdFx0cmV0dXJuIGZldGNoKHRoaXMuYXZhdGFyc1VybCkudGhlbihyZXNwb25jZSA9PiByZXNwb25jZS5qc29uKCkpXHJcblx0fVxyXG5cclxuXHRnZXRQcm9maWxlRGF0YSgpe1xyXG5cdFx0cmV0dXJuIGZldGNoKHRoaXMucHJvZmlsZVVybCkudGhlbihyZXNwb25jZSA9PiByZXNwb25jZS5qc29uKCkpXHJcblx0fVxyXG5cclxuXHRzYXZlUG9zdChwb3N0RGF0YSl7XHJcblx0XHRsZXQgdXJsID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvcG9zdHNcIjtcclxuXHRcdGxldCBwYXJhbXMgPSB7XHJcblx0XHRcdFx0XHRtZXRob2Q6ICdQT1NUJyxcclxuXHRcdFx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHRcdFx0J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG5cdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KHBvc3REYXRhKVxyXG5cdFx0fTtcclxuXHRcdHJldHVybiBmZXRjaCh1cmwgLCBwYXJhbXMpLnRoZW4ocmVzcG9uY2UgPT4gcmVzcG9uY2UuanNvbigpKVxyXG5cdFx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwic2F2ZWQgcG9zdFwiICwgZGF0YSlcclxuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xyXG5cdFx0XHR9KSAgIFxyXG5cdH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluVmlldyB7ICAgICAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuRE9NRWxlbWVudHMgPSB7XHJcblx0XHRcdFx0XHRyZXN1bHRCbG9jayA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcmVzdWx0LW1haW5cIiksXHJcblx0XHRcdFx0XHRhZGROZXdQb3N0SW5wdXQgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZE5ld1Bvc3RJbnB1dFwiKSxcclxuXHRcdFx0XHRcdGFkZE5ld0Zvcm0gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm0tYWRkLW5ld1wiKSxcclxuXHRcdFx0XHRcdGFkZFBvc3RCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2FkZFBvc3RuQnRuXCIpLFxyXG5cdFx0XHRcdFx0Ly9uYW1lTmV3UG9zdCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LW5hbWVcIiksXHJcblx0XHRcdFx0XHRhdXRob3JOZXdQb3N0IDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctcG9zdC1hdXRob3JcIiksXHJcblx0XHRcdFx0XHR0ZXh0TmV3UG9zdCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LXRleHRcIiksXHJcblx0XHRcdFx0XHRuZXdJbWFnZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LWltYWdlXCIpLFxyXG5cdFx0XHRcdFx0ZW1wdHlzcGFjZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJib2R5XCIpLFxyXG5cdFx0XHRcdFx0d2VudFRvTGluayA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd2VudFRvXCIpLFxyXG5cdFx0XHRcdFx0ZnJpZW5kc1dpdGhMaW5rIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmcmllbmRzV2l0aFwiKSxcclxuXHRcdFx0XHRcdHdvcmtlZEF0TGluayA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd29ya2VkQXRcIiksXHJcblx0XHRcdFx0XHRsaXZlc0luTGluayA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbGl2ZXNJblwiKSxcclxuXHRcdFx0XHRcdGZyb21MaW5rIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmcm9tXCIpLFxyXG5cdFx0XHRcdFx0Ly9mcmllbmRzV2l0aExpbmsgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ZyaWVuZHNXaXRoXCIpLFxyXG5cclxuXHRcdFx0XHR9OyBcclxuXHRcdFx0XHR0aGlzLnV0aWxzID0gdXRpbHM7ICAgIFxyXG5cdFx0XHRcdHRoaXMucmVhZHlEYXRhID0gW107XHJcblx0XHRcdFx0dGhpcy5wcm9maWxlRGF0YSA9IHt9O1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRpbml0KGRhdGEpe1xyXG5cdFx0XHR0aGlzLmluaXRMaXN0ZW5lcnMoKTtcclxuXHRcdFx0dGhpcy5yZWZyZXNoUG9zdHMoZGF0YSk7XHJcblx0XHRcdHRoaXMuZmlsbEFib3V0KHRoaXMucHJvZmlsZURhdGEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGluaXRMaXN0ZW5lcnMoKXtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5hZGROZXdQb3N0SW5wdXQuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIgLCB0aGlzLnNob3dGb3JtRm9yQWRkaW5nLmJpbmQodGhpcykpXHJcblx0XHRcdHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiAsIHRoaXMuaGlkZUZvcm1Gb3JBZGRpbmcuYmluZCh0aGlzKSlcclxuXHRcdH1cclxuXHJcblx0XHRzaG93Rm9ybUZvckFkZGluZyhldmVudCl7XHJcblx0XHRcdGlmKGV2ZW50LnRhcmdldC5pZCA9PSBcImFkZE5ld1Bvc3RJbnB1dFwiKXtcclxuXHRcdFx0XHQvL3RoaXMuY2xlYXJGb3JtRm9yQWRkKCk7XHJcblx0XHRcdFx0dGhpcy51dGlscy5zaG93RWwodGhpcy5ET01FbGVtZW50cy5hZGROZXdGb3JtKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdGhpZGVGb3JtRm9yQWRkaW5nKGV2ZW50KXtcclxuXHRcdFx0aWYoZXZlbnQudGFyZ2V0LmlkID09IFwiZW1wdHlzcGFjZVwiKXtcclxuXHRcdFx0XHR0aGlzLmNsZWFyRm9ybUZvckFkZCgpO1xyXG5cdFx0XHRcdHRoaXMudXRpbHMuaGlkZUVsKHRoaXMuRE9NRWxlbWVudHMuYWRkTmV3Rm9ybSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRjbGVhckZvcm1Gb3JBZGQoKXtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5hdXRob3JOZXdQb3N0LnZhbHVlID0gXCJcIjtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy50ZXh0TmV3UG9zdC52YWx1ZSA9IFwiXCI7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMubmV3SW1hZ2UudmFsdWUgPSBcIlwiO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJlZnJlc2hQb3N0cyhkYXRhKXtcclxuXHRcdFx0dGhpcy5yZWFkeURhdGEgPSBkYXRhO1xyXG5cdFx0XHR0aGlzLmJpdWxkVmlldyh0aGlzLnJlYWR5RGF0YSk7XHJcblx0XHR9O1xyXG5cdFx0XHJcblx0XHJcblx0XHRiaXVsZFZpZXcgKHJlYWR5RGF0YSl7ICBcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5yZXN1bHRCbG9jay5pbm5lckhUTUwgPSBcIlwiO1xyXG5cdFx0XHRmb3IgKGxldCBpID0gcmVhZHlEYXRhLmxlbmd0aCAtIDE7IGkgPiAwOyBpLS0pIHsgICAgXHJcblx0XHRcdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnJlc3VsdEJsb2NrLmlubmVySFRNTCArPSB0aGlzLmNyZWF0ZVBvc3QocmVhZHlEYXRhW2ldKTsgXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblxyXG5cdFx0Y3JlYXRlUG9zdCAoaXRlbSkge1xyXG5cdFx0XHRsZXQgaW1ncyA9IGBgO1xyXG5cdFx0XHRpdGVtLmltYWdlcy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xyXG5cdFx0XHRcdGltZ3MgKz0gXHJcblx0XHRcdFx0XHRgPGltZyBzdHlsZT1cImRpc3BsYXk6IGlubGluZS1ibG9jazsgIG1hcmdpbjogMTBweDsgdmVydGljYWwtYWxpZ246IGJvdHRvbTtcIiBkYXRhLXdpZHRoPVwiNjQwXCIgZGF0YS1oZWlnaHQ9XCI2NDBcIiBkYXRhLWFjdGlvbj1cInpvb21cIiBzcmM9XCIke2VsZW1lbnR9XCI+XHJcblx0XHRcdFx0YFxyXG5cdFx0fSk7XHJcblxyXG5cdFx0XHRyZXR1cm4gXHRgPGxpIGNsYXNzPVwicnYgYiBhZ3pcIj5cclxuXHRcdFx0PGltZyBjbGFzcz1cImJvcyB2YiB5YiBhZmZcIiAgc3JjPSAke2l0ZW0udXJsfT5cclxuXHRcdFx0PGRpdiBjbGFzcz1cInJ3XCI+XHJcblx0XHRcdFx0PGRpdiBjbGFzcz1cImJwZFwiPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cImJwYlwiPlxyXG5cdFx0XHRcdFx0XHQ8c21hbGwgY2xhc3M9XCJhY3ggYXhjXCI+JHtpdGVtLmRhdGV9PC9zbWFsbD5cclxuXHRcdFx0XHRcdFx0PGg2PiR7aXRlbS5uYW1lfTwvaDY+XHJcblx0XHRcdFx0XHQ8L2Rpdj5cclxuXHRcdFx0XHRcdDxwIGNsYXNzPVwidGV4dC1sZWZ0XCI+JHtpdGVtLnRleHR9PC9wPlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cImJveVwiIGRhdGEtZ3JpZD1cImltYWdlc1wiPiR7aW1nc308L2Rpdj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHQ8L2Rpdj5cclxuXHRcdDwvbGk+YFxyXG5cdFx0fTtcclxuXHJcblx0XHRmaWxsQWJvdXQob2JqKXtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy53ZW50VG9MaW5rLmlubmVySFRNTCA9IG9iai53ZW50VG87XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuZnJpZW5kc1dpdGhMaW5rLmlubmVySFRNTCA9IG9iai5mcmllbmRzO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLndvcmtlZEF0TGluay5pbm5lckhUTUwgPSBvYmoud29ya1BsYWNlO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmxpdmVzSW5MaW5rLmlubmVySFRNTCA9IG9iai5jb3VudHJ5O1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmZyb21MaW5rLmlubmVySFRNTCA9IG9iai5zdGF0ZTtcclxuXHRcdH1cclxuXHJcbi8qXHJcbntcclxuICAgICAgXCJuYW1lXCI6IFwiRGF2ZVwiLFxyXG4gICAgICBcImxhc3ROYW1lXCI6IFwiR2FtYWNoZVwiLFxyXG4gICAgICBcInVzZXJOYW1lXCI6IFwiUmVhY2h5XCIsXHJcbiAgICAgIFwiZW1haWxcIjogXCJkYXZlLmdhbWFjaGVAZ21haWwuY29tXCIsXHJcbiAgICAgIFwiYWRyZXNzXCI6IFwiRmlyc3QgYXZlLCBibGQgMTIsIGFwcCAzXCIsXHJcbiAgICAgIFwiYWRyZXNzMlwiOiBcImhvc3RlbFwiLHN0YXRlXHJcbiAgICAgIFwid29ya1BsYWNlXCI6IFwiR2l0aHViXCIsXHJcbiAgICAgIFwiY291bnRyeVwiOiBcIkNhbmFkYVwiLFxyXG4gICAgICBcIlwiOiBcIlRvcm9udG9cIixcclxuICAgICAgXCJ6aXBcIjogXCIyMjMzMjJcIixcclxuICAgICAgXCJmcmllbmRzXCI6IFwiT2JhbWFcIlxyXG4gICAgfVxyXG4qL1xyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9maWxlQ29udHJvbGxlciB7IFxyXG5cdGNvbnN0cnVjdG9yKG1vZGVsLCB2aWV3LCB1dGlscykge1xyXG5cdFx0XHR0aGlzLm1vZGVsID0gbW9kZWw7XHJcblx0XHRcdHRoaXMudmlldyA9IHZpZXc7XHJcblx0XHRcdHRoaXMudXRpbHMgPSB1dGlscztcclxuXHRcdFx0dGhpcy5pbml0KCk7XHJcblx0XHRcdFxyXG5cdH1cclxuICAgXHJcblx0XHRpbml0KCl7XHJcblx0XHRjb25zb2xlLmxvZyhcInByb2ZpbGUgaW5pdGVkXCIpO1xyXG4gICAgICAgIHRoaXMubW9kZWwuZ2V0UHJvZmlsZURhdGEoKS50aGVuKChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIC8vdGhpcy5pbml0TGlzdGVuZXJzKClcclxuICAgICAgICAgICAgdGhpcy52aWV3LmluaXQoZGF0YSk7XHJcbiAgICAgICAgICAgIC8vdGhpcy5pc0xhc3RQYWdlKCk7XHJcbiAgICAgICAgfSk7IFx0XHJcblx0fVxyXG4gICAgXHJcbn1cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2ZpbGVNb2RlbCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuXHRcdFx0dGhpcy51cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wcm9maWxlXCJcclxuICAgIH1cclxuXHJcblx0XHRnZXRQcm9maWxlRGF0YSgpe1xyXG5cdFx0XHRyZXR1cm4gZmV0Y2godGhpcy51cmwpLnRoZW4ocmVzcG9uY2UgPT4gcmVzcG9uY2UuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJQcm9maWxlRGF0YSBpcyBsb2FkZWRcIik7XHJcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcclxuICAgICAgICB9KSBcclxuXHRcdH1cclxuXHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZmlsZVZpZXcgeyAgICAgICAgXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLkRPTUVsZW1lbnRzID0ge1xyXG5cdFx0XHRcdFx0Zmlyc3ROYW1lIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmaXJzdE5hbWVcIiksXHJcblx0XHRcdFx0XHRsYXN0TmFtZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbGFzdE5hbWVcIiksXHJcblx0XHRcdFx0XHR1c2VyTmFtZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdXNlcm5hbWVcIiksXHJcblx0XHRcdFx0XHRlbWFpbCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZW1haWxQcm9maWxlXCIpLFxyXG5cdFx0XHRcdFx0YWRkcmVzcyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkcmVzc1Byb2ZpbGVcIiksXHJcblx0XHRcdFx0XHRhZGRyZXNzMiA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkcmVzczJQcm9maWxlXCIpLFxyXG5cdFx0XHRcdFx0Y291bnRyeSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY291bnRyeVByb2ZpbGVcIiksXHJcblx0XHRcdFx0XHRzdGF0ZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3RhdGVQcm9maWxlXCIpLFx0XHJcblx0XHRcdFx0XHR6aXAgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ppcFwiKVxyXG4gICAgICAgIH07ICAgICBcclxuICAgICAgICB0aGlzLnJlYWR5RGF0YTtcclxuICAgIH1cclxuXHJcblx0XHRpbml0KGRhdGEpe1xyXG5cdFx0XHR0aGlzLnJlYWR5RGF0YSA9IGRhdGFbMF07XHJcblx0XHRcdHRoaXMuYnVpbGRWaWV3KHRoaXMucmVhZHlEYXRhKTtcclxuXHRcdH1cclxuXHJcblx0XHRidWlsZFZpZXcoZGF0YSl7XHJcblx0XHRcdGNvbnNvbGUubG9nKHRoaXMuRE9NRWxlbWVudHMpO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhkYXRhKTtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5maXJzdE5hbWUudmFsdWUgPSBkYXRhLm5hbWU7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMubGFzdE5hbWUudmFsdWUgPSBkYXRhLmxhc3ROYW1lO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnVzZXJOYW1lLnZhbHVlID0gZGF0YS51c2VyTmFtZTtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5lbWFpbC52YWx1ZSA9IGRhdGEuZW1haWw7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuYWRkcmVzcy52YWx1ZSA9IGRhdGEuYWRyZXNzO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmFkZHJlc3MyLnZhbHVlID0gZGF0YS5hZHJlc3MyO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmNvdW50cnkudmFsdWUgPSBkYXRhLmNvdW50cnk7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuc3RhdGUudmFsdWUgPSBkYXRhLnN0YXRlO1x0XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuemlwLnZhbHVlID0gZGF0YS56aXA7XHJcblx0XHR9XHJcbiAgICBcclxufVxyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXRpbHMge1xuXG4gICAgY29uc3RydWN0b3IoKXtcblx0XHRcdFxuXG4gICAgICAgIHRoaXMuc29ydGluZ0NvbmZpZyA9IHtcbiAgICAgICAgICAgXCJBXCI6IHBhZ2UgPT4ge1xuICAgICAgICAgICAgICAgIHBhZ2Uuc29ydCgoYSwgYikgPT57XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhLmVtYWlsID4gYi5lbWFpbCA/IDEgOiAtMTtcbiAgICAgICAgICAgICAgICB9KTsgXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhZ2U7XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgXCJaXCI6IHBhZ2UgPT4ge1xuICAgICAgICAgICAgICAgIHBhZ2Uuc29ydCgoYSwgYikgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYS5lbWFpbCA8IGIuZW1haWwgPyAxIDogLTE7O1xuICAgICAgICAgICAgICAgIH0pOyBcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFnZTtcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBcIkFkbWluXCI6IHBhZ2UgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWdlLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaXRlbS5yb2xlID09IFwiQWRtaW5cIjtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiVXNlclwiOiBwYWdlID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcGFnZS5maWx0ZXIoKGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGl0ZW0ucm9sZSA9PSBcIlVzZXJcIjtcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIFwiRmluZFwiOiBwYWdlID0+IHtcbiAgICAgICAgICAgICAgICBsZXQgZXhwID0gbmV3IFJlZ0V4cChldmVudC50YXJnZXQudmFsdWUsIFwiaVwiKVxuICAgICAgICAgICAgICAgIHJldHVybiBwYWdlLmZpbHRlcihpdGVtID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV4cC50ZXN0KGl0ZW0ubmFtZSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXHRcdH1cblx0XHRcblx0XHRzdGF0aWMgaW5pdFRlbXBsYXRlKHdyYXBwZXJFbCwgdGVtcGxhdGVJZCkge1xuXHRcdFx0dmFyIHRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGVtcGxhdGVJZH1gKTtcblx0XHRcdHZhciBjbG9uID0gdGVtcGxhdGUuY29udGVudC5jbG9uZU5vZGUodHJ1ZSk7XG5cdFx0XHR3cmFwcGVyRWwuaW5uZXJIVE1MID0gJyc7XG5cdFx0XHR3cmFwcGVyRWwuYXBwZW5kQ2hpbGQoY2xvbik7XG5cdFx0fVxuXG4gICAgc3RhdGljIHNob3dWaWV3KHZpZXdzKSB7XG4gICAgICAgIHZpZXdzLmZvckVhY2goZWxlbWVudCA9PiB7XG4gICAgICAgICAgICBlbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJoaWRlXCIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBzdGF0aWMgaGlkZVZpZXcodmlld3MpIHtcbiAgICAgICAgdmlld3MuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQuY2xhc3NMaXN0LmFkZChcImhpZGVcIik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHN0YXRpYyBuYXZpZ2F0ZVRvKHJvdXRlTmFtZSkge1xuICAgICAgICB3aW5kb3cubG9jYXRpb24uaGFzaD0gXCIjXCIgKyByb3V0ZU5hbWU7XG4gICAgfVxuXG4gICAgLy8gc3RhdGljIGlzTG9nZ2VkSW4oKSB7XG4gICAgLy8gICAgIGxldCBjcmVkZW50aWFscyA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NyZWRlbnRpYWxzJykpO1xuICAgIC8vICAgICByZXR1cm4gISFjcmVkZW50aWFscztcbiAgICAvLyB9XG5cdFx0c3RhdGljIGlzTG9nZ2VkSW4oKSB7XG4gICAgICAgIC8vbGV0IGNyZWRlbnRpYWxzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnY3JlZGVudGlhbHMnKSk7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cblxuXHRcdHN0YXRpYyBhY3RpdmF0ZUJ0bihidG5zKXtcblx0XHRcdFx0YnRucy5mb3JFYWNoKGVsZW1lbnQgPT4ge1xuICAgICAgICAgICAgZWxlbWVudC5wYXJlbnRFbGVtZW50LmNsYXNzTGlzdC5hZGQoXCJhY3RpdmVcIik7XG4gICAgICAgIH0pO1xuXHRcdH1cblx0XHRzdGF0aWMgZGlzYWN0aXZhdGVCdG4oYnRucyl7XG5cdFx0XHRcdGJ0bnMuZm9yRWFjaChlbGVtZW50ID0+IHtcbiAgICAgICAgICAgIGVsZW1lbnQucGFyZW50RWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlXCIpO1xuICAgICAgICB9KTtcblx0XHR9XG5cdFx0c3RhdGljIHNob3dIaWRlKG9iamVjdCl7ICAgIFxuXHRcdFx0Zm9yKHZhciBrZXkgaW4gb2JqZWN0KSB7IFxuXHRcdFx0XHRcdHZhciBrZXkgPSBrZXk7XG5cdFx0XHRcdFx0dmFyIHZhbHVlID0gb2JqZWN0W2tleV07IFxuXHRcdFx0XHRcdHZhbHVlLmZvckVhY2goRE9NRWxlbSA9PiB7XG5cdFx0XHRcdFx0XHRcdFx0XHRET01FbGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIgLCBcImhpZGVcIik7XG5cdFx0XHRcdFx0XHRcdFx0XHRET01FbGVtLmNsYXNzTGlzdC5hZGQoa2V5KTtcblx0XHRcdFx0XHR9KVxuXHRcdFx0fVxuXHRcdH07XG5cbiBcdFx0c3RhdGljIHNob3dFbChlbCl7ICAgIFxuXHRcdFx0ZWwuY2xhc3NMaXN0LnJlbW92ZShcImhpZGVcIik7XG5cdFx0fTtcblx0XHRzdGF0aWMgaGlkZUVsKGVsKXsgICAgXG5cdFx0XHRlbC5jbGFzc0xpc3QuYWRkKFwiaGlkZVwiKTtcblx0XHR9O1xuXG5cbn1cbiIsImltcG9ydCB1dGlscyBmcm9tICcuL3V0aWxzLmpzJztcbmltcG9ydCBPYnNlcnZlciBmcm9tICcuL2dhbGxlcnkvb2JzZXJ2ZXIuanMnO1xuXG5pbXBvcnQgTG9naW5Db250cm9sbGVyIGZyb20gJy4vbG9naW4vbG9naW4uY29udHJvbGxlci5qcyc7XG5pbXBvcnQgTG9naW5Nb2RlbCBmcm9tICcuL2xvZ2luL2xvZ2luLm1vZGVsLmpzJztcbmltcG9ydCBMb2dpblZpZXcgZnJvbSAnLi9sb2dpbi9sb2dpbi52aWV3LmpzJztcblxuaW1wb3J0XHRNYWluTW9kZWwgZnJvbVx0Jy4vbWFpblBhZ2UvbWFpbi5tb2RlbC5qcyc7XG5pbXBvcnRcdE1haW5WaWV3IGZyb21cdCcuL21haW5QYWdlL21haW4udmlldy5qcyc7XG5pbXBvcnRcdE1haW5Db250cm9sbGVyIGZyb21cdCcuL21haW5QYWdlL21haW4uY29udHJvbGxlci5qcyc7XG5cbmltcG9ydCBQcm9maWxlQ29udHJvbGxlciBmcm9tICcuL3Byb2ZpbGUvcHJvZmlsZS5jb250cm9sbGVyLmpzJztcbmltcG9ydCBQcm9maWxlTW9kZWwgZnJvbSAnLi9wcm9maWxlL3Byb2ZpbGUubW9kZWwuanMnO1xuaW1wb3J0IFByb2ZpbGVWaWV3IGZyb20gJy4vcHJvZmlsZS9wcm9maWxlLnZpZXcuanMnO1xuXG5cbmltcG9ydCBHYWxsZXJ5Q29udHJvbGxlciBmcm9tICcuL2dhbGxlcnkvZ2FsbGVyeS5jb250cm9sbGVyLmpzJztcbmltcG9ydCBHYWxsZXJ5TW9kZWwgZnJvbSAnLi9nYWxsZXJ5L2dhbGxlcnkubW9kZWwuanMnO1xuaW1wb3J0IEdhbGxlcnlWaWV3IGZyb20gJy4vZ2FsbGVyeS9nYWxsZXJ5LnZpZXcuanMnO1xuXG5cblxuXG5sZXQgbG9naW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xvZ2luLXZpZXdcIik7XG5sZXQgbWFpblBhZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW4tdmlld1wiKTtcbmxldCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlLXZpZXdcIik7XG5sZXQgZ2FsbGVyeSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZ2FsbGVyeS12aWV3XCIpO1xuXG5cbmxldCBtYWluUGFnZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbWFpblBhZ2VCdG5cIik7XG5sZXQgcHJvZmlsZUJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJvZmlsZUJ0blwiKTtcbmxldCBnYWxsZXJ5QnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYWxsZXJ5QnRuXCIpO1xuLy9sZXQgbG9naW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xvZ2luLXZpZXdcIik7XG4vL2xldCBjb250YWN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb250YWN0LXZpZXdcIik7XG5cbmNvbnN0IHdyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3dyYXBwZXJcIik7XG5cbmxldCByb3V0ZUNvbmZpZyA9IHtcbiAgICBcIlwiIDogKCkgPT4ge1xuICAgICAgICB1dGlscy5pbml0VGVtcGxhdGUod3JhcHBlciwgXCJsb2dpbi12aWV3XCIpO1xuICAgICAgICBsZXQgbW9kZWwgPSBuZXcgTG9naW5Nb2RlbDtcbiAgICAgICAgbGV0IHZpZXcgPSBuZXcgTG9naW5WaWV3O1xuICAgICAgICBuZXcgTG9naW5Db250cm9sbGVyKG1vZGVsLCB2aWV3LCB1dGlscyk7XG5cdFx0fSxcblx0XHRcIm1haW5QYWdlXCI6ICgpID0+IHtcblx0XHRcdHV0aWxzLmluaXRUZW1wbGF0ZSh3cmFwcGVyLCBcIm1haW5QYWdlLXZpZXdcIik7XG5cdFx0XHRsZXQgbW9kZWwgPSBuZXcgTWFpbk1vZGVsKCk7XG5cdFx0XHRsZXQgdmlldyA9IG5ldyBNYWluVmlldyh1dGlscyk7XG5cdFx0XHRuZXcgTWFpbkNvbnRyb2xsZXIobW9kZWwsIHZpZXcsIHV0aWxzKVxuXHRcdH0sXG5cdFx0XCJwcm9maWxlXCIgOiAoKSA9PiB7XG5cdFx0XHR1dGlscy5pbml0VGVtcGxhdGUod3JhcHBlciwgXCJwcm9maWxlLXZpZXdcIik7XG5cdFx0XHRsZXQgbW9kZWwgPSBuZXcgUHJvZmlsZU1vZGVsO1xuXHRcdFx0bGV0IHZpZXcgPSBuZXcgUHJvZmlsZVZpZXc7XG5cdFx0XHRuZXcgUHJvZmlsZUNvbnRyb2xsZXIobW9kZWwsIHZpZXcsIG5ldyB1dGlscylcbn0sXG4gICAgXCJnYWxsZXJ5XCIgOiAoKSA9PiB7XG4gICAgICAgIHV0aWxzLmluaXRUZW1wbGF0ZSh3cmFwcGVyLCBcImdhbGxlcnktdmlld1wiKTtcbiAgICAgICAgbGV0IG9ic2VydmVyID0gbmV3IE9ic2VydmVyO1xuICAgICAgICBsZXQgbW9kZWwgPSBuZXcgR2FsbGVyeU1vZGVsO1xuICAgICAgICBsZXQgdmlldyA9IG5ldyBHYWxsZXJ5VmlldztcbiAgICAgICAgbmV3IEdhbGxlcnlDb250cm9sbGVyKG1vZGVsLCB2aWV3LCBvYnNlcnZlciwgbmV3IHV0aWxzKVxuICAgIH0sXG4gICAgXCJjb250YWN0c1wiIDogKCkgPT4ge1xuICAgICAgICB1dGlscy5pbml0VGVtcGxhdGUod3JhcHBlciwgXCJjb250YWN0LXZpZXdcIik7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiQ29udGFjdHMgcm91dGUgaXMgbG9hZGVkXCIpXG4gICAgICAgIC8vaW1wbGVtZW50IENvbnRyb2xsZXIsIFZpZXcgYW5kIE1vZGVsIGZvciB0aGlzIFJvdXRlXG4gICAgfVxufVxuXG5mdW5jdGlvbiBhY3RpdmF0ZVJvdXRlKHJvdXRlTmFtZSl7XG4gICAgbGV0IHJvdXRlID0gcm91dGVDb25maWdbcm91dGVOYW1lXTtcbiAgICByb3V0ZSAmJiByb3V0ZSgpOyAgICBcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVJvdXRlKCkge1xuICAgIGxldCByb3V0ZU5hbWUgPSBkb2N1bWVudC5sb2NhdGlvbi5oYXNoLnJlcGxhY2UoL14jLywgJycpO1xuICAgIGlmKHJvdXRlTmFtZSAmJiAhdXRpbHMuaXNMb2dnZWRJbigpKSB7XG4gICAgICAgIHV0aWxzLm5hdmlnYXRlVG8oXCJcIik7IFxuICAgIH0gZWxzZSB7XG4gICAgICAgIGFjdGl2YXRlUm91dGUocm91dGVOYW1lKTtcbiAgICB9XG5cbi8vIGxldCBhY3RpdmF0ZWRSb3V0ZXMgPSB7fTtcblxuLy8gbGV0IHJvdXRlQ29uZmlnID0ge1xuLy8gICAgIFwibWFpblBhZ2VcIiA6IHtcbi8vICAgICAgICAgc2hvdyA6ICgpID0+IHtcbi8vIFx0XHRcdFx0XHRcdFV0aWxzLnNob3dWaWV3KFttYWluUGFnZV0pO1xuLy8gICAgICAgICAgICAgVXRpbHMuaGlkZVZpZXcoW3Byb2ZpbGUsIGdhbGxlcnldKTtcbi8vIFx0XHRcdFx0XHRcdFV0aWxzLmFjdGl2YXRlQnRuKFttYWluUGFnZUJ0bl0pO1xuLy8gXHRcdFx0XHRcdFx0VXRpbHMuZGlzYWN0aXZhdGVCdG4oW3Byb2ZpbGVCdG4sIGdhbGxlcnlCdG5dKTtcbi8vICAgICAgICAgfSxcbi8vICAgICAgICAgaW5pdCA6ICgpID0+IHtcbi8vICAgICAgICAgICAgIGxldCBtb2RlbCA9IG5ldyBNYWluTW9kZWw7XG4vLyAgICAgICAgICAgICBsZXQgdmlldyA9IG5ldyBNYWluVmlldztcbi8vIFx0XHRcdFx0XHRcdGxldCB1dGlscyA9IG5ldyBVdGlscztcbi8vICAgICAgICAgICAgIGxldCBtYWluQ29udGVyb2xsZXIgPSBuZXcgTWFpbkNvbnRyb2xsZXIobW9kZWwsIHZpZXcsIHV0aWxzKTtcbi8vIFx0XHRcdFx0XHRcdG1haW5Db250ZXJvbGxlci5pbml0KCk7XG4vLyAgICAgICAgIH1cbi8vICAgICB9LFxuLy8gICAgIFwicHJvZmlsZVwiIDoge1xuLy8gICAgICAgICBzaG93IDogKCkgPT4ge1xuLy8gICAgICAgICAgICAgVXRpbHMuc2hvd1ZpZXcoW3Byb2ZpbGVdKTtcbi8vICAgICAgICAgICAgIFV0aWxzLmhpZGVWaWV3KFttYWluUGFnZSwgZ2FsbGVyeV0pO1xuLy8gXHRcdFx0XHRcdFx0VXRpbHMuYWN0aXZhdGVCdG4oW3Byb2ZpbGVCdG5dKTtcbi8vIFx0XHRcdFx0XHRcdFV0aWxzLmRpc2FjdGl2YXRlQnRuKFttYWluUGFnZUJ0biwgZ2FsbGVyeUJ0bl0pO1xuLy8gICAgICAgICAgICAgY29uc29sZS5sb2coXCJDb250YWN0cyByb3V0ZSBpcyBsb2FkZWRcIilcbi8vICAgICAgICAgfSxcbi8vICAgICAgICAgaW5pdCA6ICgpID0+IHtcbi8vICAgICAgICAgICAgIGxldCBtb2RlbCA9IG5ldyBQcm9maWxlTW9kZWw7XG4vLyAgICAgICAgICAgICBsZXQgdmlldyA9IG5ldyBQcm9maWxlVmlldztcbi8vIFx0XHRcdFx0XHRcdGxldCB1dGlscyA9IG5ldyBVdGlscztcbi8vICAgICAgICAgICAgIG5ldyBQcm9maWxlQ29udHJvbGxlcihtb2RlbCwgdmlldywgdXRpbHMpXG4vLyAgICAgICAgIH1cbi8vICAgICB9LFxuLy8gICAgIFwiZ2FsbGVyeVwiIDoge1xuLy8gICAgICAgICBzaG93IDogKCkgPT4ge1xuLy8gICAgICAgICAgICAgVXRpbHMuc2hvd1ZpZXcoW2dhbGxlcnldKTtcbi8vICAgICAgICAgICAgIFV0aWxzLmhpZGVWaWV3KFttYWluUGFnZSwgcHJvZmlsZV0pO1xuLy8gXHRcdFx0XHRcdFx0VXRpbHMuYWN0aXZhdGVCdG4oW2dhbGxlcnlCdG5dKTtcbi8vIFx0XHRcdFx0XHRcdFV0aWxzLmRpc2FjdGl2YXRlQnRuKFttYWluUGFnZUJ0biwgcHJvZmlsZUJ0bl0pO1xuLy8gICAgICAgICAgICAgY29uc29sZS5sb2coXCJNYWluIHJvdXRlIGlzIGxvYWRlZFwiKVxuLy8gICAgICAgICB9LFxuLy8gICAgICAgICBpbml0IDogKCkgPT4ge1xuLy8gICAgICAgICAgICAgbGV0IG9ic2VydmVyID0gbmV3IE9ic2VydmVyO1xuLy8gICAgICAgICAgICAgbGV0IG1vZGVsID0gbmV3IEdhbGxlcnlNb2RlbDtcbi8vICAgICAgICAgICAgIGxldCB2aWV3ID0gbmV3IEdhbGxlcnlWaWV3O1xuLy8gICAgICAgICAgICAgbmV3IEdhbGxlcnlDb250cm9sbGVyKG1vZGVsLCB2aWV3LCBvYnNlcnZlciwgbmV3IFV0aWxzKVxuLy8gICAgICAgICB9XG4vLyAgICAgfVxuLy8gfVxuXG4vLyBmdW5jdGlvbiBhY3RpdmF0ZVJvdXRlKHJvdXRlTmFtZSl7XG4vLyAgICAgaWYgKGFjdGl2YXRlZFJvdXRlc1tyb3V0ZU5hbWVdKSB7XG4vLyAgICAgICAgIGFjdGl2YXRlZFJvdXRlc1tyb3V0ZU5hbWVdKCk7XG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgbGV0IHJvdXRlID0gcm91dGVDb25maWdbcm91dGVOYW1lXTtcbi8vICAgICAgICAgaWYgKHJvdXRlKSB7XG4vLyAgICAgICAgICAgICByb3V0ZS5pbml0KCk7XG4vLyAgICAgICAgICAgICByb3V0ZS5zaG93KCk7XG4vLyAgICAgICAgICAgICBhY3RpdmF0ZWRSb3V0ZXNbcm91dGVOYW1lXSA9IHJvdXRlLnNob3c7XG4vLyAgICAgICAgIH1cbi8vICAgICB9IFxuLy8gfVxuXG4vLyBleHBvcnQgZnVuY3Rpb24gdXBkYXRlUm91dGUoKSB7XG4vLyAgICAgbGV0IHJvdXRlTmFtZSA9IGRvY3VtZW50LmxvY2F0aW9uLmhhc2gucmVwbGFjZSgvXiMvLCAnJyk7XG4vLyAgICAgaWYocm91dGVOYW1lICYmICFVdGlscy5pc0xvZ2dlZEluKCkpIHtcbi8vICAgICAgICAgVXRpbHMubmF2aWdhdGVUbyhcIlwiKTsgXG4vLyAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgYWN0aXZhdGVSb3V0ZShyb3V0ZU5hbWUpO1xuLy8gICAgIH1cbiAgICBcbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIExvZ2luQ29udHJvbGxlciB7IFxyXG5cdGNvbnN0cnVjdG9yKG1vZGVsLCB2aWV3LCB1dGlscykge1xyXG5cdFx0dGhpcy5sb2dpbk1vZGVsID0gbW9kZWw7XHJcblx0XHR0aGlzLmxvZ2luVmlldyA9IHZpZXc7XHJcblx0XHR0aGlzLnV0aWxzID0gdXRpbHM7XHJcblx0XHR0aGlzLmluaXQoKTtcclxuXHRcdC8vdGhpcy51cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9sb2dpbi9cIlxyXG5cdH0gICAgXHJcblxyXG5cdGluaXQoKSB7XHJcblx0XHQvL3RoaXMubG9naW5WaWV3LmhpZGVCdXR0b25zKCk7XHJcblx0XHR0aGlzLmZpbGxTdGFydFBhZ2VVc2VyRGF0YSgpO1xyXG5cdFx0dGhpcy5iaW5kRXZlbnRzKCk7XHJcblxyXG5cdH1cclxuXHJcblx0ZmlsbFN0YXJ0UGFnZVVzZXJEYXRhICgpe1xyXG5cdFx0bGV0IGNoZWNrQm94U3RhdHVzID0gdGhpcy5sb2dpbk1vZGVsLmdldENoZWNrYm94U3RhdHVzKCk7XHJcblx0XHRpZiAoY2hlY2tCb3hTdGF0dXMgPT0gdHJ1ZSl7XHJcblx0XHRcdHRoaXMubG9naW5Nb2RlbC5nZXREYXRhKCkudGhlbihkYXRhID0+IHtcclxuXHRcdFx0XHR0aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5jaGVja0JveFJlbWVtZW1iZXJNZS5jaGVja2VkID0gdHJ1ZTtcdFxyXG5cdFx0XHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLmVtYWlsLnZhbHVlID0gZGF0YS5sb2dpbjsgICAgXHJcblx0XHRcdFx0dGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMucGFzc3dvcmQudmFsdWUgPSBkYXRhLnBhc3N3b3JkO1xyXG5cdFx0XHR9KVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMuY2hlY2tCb3hSZW1lbWVtYmVyTWUuY2hlY2tlZCA9IGZhbHNlO1x0XHJcblx0XHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLmVtYWlsLnZhbHVlID0gXCJcIjtcclxuXHRcdFx0dGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMucGFzc3dvcmQudmFsdWUgPSBcIlwiO1xyXG5cdFx0fVxyXG5cdH07XHJcblx0XHRcclxuXHRiaW5kRXZlbnRzKCkge1xyXG5cdFx0Ly90aGlzLmxvZ2luVmlldy5ET01FbGVtZW50cy5lbnRlckJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5pbml0VmFsaWRhdGlvbi5iaW5kKHRoaXMpKTtcclxuXHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLnN1Ym1pdEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5pbml0VmFsaWRhdGlvbi5iaW5kKHRoaXMpKTtcclxuXHRcdHRoaXMubG9naW5WaWV3LkRPTUVsZW1lbnRzLmV4aXRCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuaW5pdExvZ091dC5iaW5kKHRoaXMpKTtcclxuXHR9XHJcblxyXG5cdGluaXRWYWxpZGF0aW9uKGV2ZW50KXtcclxuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRpZihldmVudC50YXJnZXQuaWQgPT0gJ3N1Ym1pdEJ0bicpe1xyXG5cdFx0XHR0aGlzLmxvZ2luVmlldy5oaWRlQWxlcnRNc2dzKCk7XHJcblx0XHRcdGxldCBjcmVkZW50aWFscyA9IHRoaXMubG9naW5WaWV3LmdldExvZ0FuZFBhc3MoKTtcclxuXHRcdFx0bGV0IHZhbGlkUmVzdWx0ID0gdGhpcy5sb2dpbk1vZGVsLmNoZWNrRmllbGRzIChjcmVkZW50aWFscy5sb2dpbiwgY3JlZGVudGlhbHMucGFzc3dvcmQpO1xyXG5cdFx0XHRpZih2YWxpZFJlc3VsdCA9PSB0cnVlKXtcclxuXHRcdFx0XHR0aGlzLmxvZ2luTW9kZWwubG9nQW5kUGFzc1ZhbGlkYXRpb24oY3JlZGVudGlhbHMpXHJcblx0XHRcdFx0LnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0XHRpZiAoZGF0YS5zdGF0dXMpIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5nZXRBbmRTZXRDaGVja2JveFN0YXR1cygpO1xyXG5cdFx0XHRcdFx0XHR0aGlzLnV0aWxzLm5hdmlnYXRlVG8oXCJtYWluUGFnZVwiKTtcclxuXHRcdFx0XHRcdFx0dGhpcy5sb2dpblZpZXcuc2hvd0J1dHRvbnMoKTtcclxuXHRcdFx0XHRcdFx0dGhpcy5sb2dpblZpZXcuaGlkZUVudGVyQnRuKCk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdHRoaXMubG9naW5WaWV3LnNob3dFcnJvck1zZyhcIjFcIilcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0aGlzLmxvZ2luVmlldy5zaG93RXJyb3JNc2codmFsaWRSZXN1bHQpXHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0XHJcblx0aW5pdExvZ091dCgpe1xyXG5cdFx0dGhpcy5sb2dpbk1vZGVsLmxvZ091dCgpO1xyXG5cdFx0dGhpcy5sb2dpblZpZXcuaGlkZUJ1dHRvbnMoKTtcclxuXHRcdHRoaXMubG9naW5WaWV3LnNob3dFbnRlckJ0bigpO1xyXG5cdFx0dGhpcy51dGlscy5uYXZpZ2F0ZVRvKFwiXCIpO1xyXG5cdFx0dGhpcy5nZXRBbmRTZXRDaGVja2JveFN0YXR1cygpO1xyXG5cdH1cclxuXHRnZXRBbmRTZXRDaGVja2JveFN0YXR1cygpe1xyXG5cdFx0aWYodGhpcy5sb2dpblZpZXcuRE9NRWxlbWVudHMuY2hlY2tCb3hSZW1lbWVtYmVyTWUuY2hlY2tlZCA9PSB0cnVlKXtcclxuXHRcdFx0dGhpcy5sb2dpbk1vZGVsLnNldENoZWNrYm94U3RhdHVzKCd0cnVlJyk7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR0aGlzLmxvZ2luTW9kZWwuc2V0Q2hlY2tib3hTdGF0dXMoJ2ZhbHNlJyk7XHJcblx0XHR9XHJcblx0fVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0XHRjbGFzcyBMb2dpbk1vZGVsIHtcclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdHRoaXMudXJsQWRtaW5Vc2VyID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvYWRtaW5Vc2VyXCI7XHJcblx0XHR0aGlzLnVybExvZ2luID0gXCJodHRwOi8vbG9jYWxob3N0OjMwMDAvbG9naW5cIjs7XHJcblx0fVxyXG5cdFx0XHJcblx0Z2V0RGF0YSgpIHtcclxuXHRcdHJldHVybiBmZXRjaCh0aGlzLnVybEFkbWluVXNlcikudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS5qc29uKCkpXHJcblx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0XHRjb25zb2xlLmxvZyhcIkluaXRpYWwgZGF0YSBpcyBsb2FkZWRcIik7XHJcblx0XHRcdFx0Y29uc29sZS5sb2coZGF0YSk7XHJcblx0XHRcdFx0cmV0dXJuIGRhdGE7XHJcblx0XHR9KSAgICAgICAgIFxyXG5cdH1cclxuXHRcdFxyXG5cdFxyXG5cdGdldENoZWNrYm94U3RhdHVzKCl7XHJcblx0XHRpZihsb2NhbFN0b3JhZ2UuZ2V0SXRlbShcInJlbWVtYmVyXCIpID09IFwidHJ1ZVwiKXtcclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdH1cclxuXHRcdFxyXG5cdH1cclxuXHRzZXRDaGVja2JveFN0YXR1cyhjaGVja2VkKXtcclxuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwicmVtZW1iZXJcIiwgY2hlY2tlZCApO1xyXG5cdH1cclxuXHJcblx0Y2hlY2tTZXNzaW9uKCkge1xyXG5cdFx0bGV0IGNyZWRlbnRpYWxzID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2NyZWRlbnRpYWxzJyk7XHJcblx0XHRpZihjcmVkZW50aWFscykge1xyXG5cdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHR9XHJcblx0XHJcblx0c2V0VXNlckluZm8ob2JqKXtcclxuXHRcdGxvY2FsU3RvcmFnZS5zZXRJdGVtKFwiY3JlZGVudGlhbHNcIiAsIEpTT04uc3RyaW5naWZ5KG9iaikpXHJcblx0fTtcclxuXHJcblx0bG9nT3V0KCl7XHJcblx0XHRsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgnY3JlZGVudGlhbHMnKTtcclxuXHR9XHJcblxyXG5cclxuXHRsb2dBbmRQYXNzVmFsaWRhdGlvbiAoY3JlZGVudGlhbHMpIHtcclxuXHRcdGxldCB1cmwgPSB0aGlzLnVybExvZ2luO1xyXG5cdFx0bGV0IHBhcmFtcyA9IHtcclxuXHRcdFx0bWV0aG9kOiAnUE9TVCcsXHJcblx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcblx0XHRcdH0sXHJcblx0XHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KGNyZWRlbnRpYWxzKVxyXG5cdFx0fTtcclxuXHRcdFx0XHJcblx0XHRyZXR1cm4gZmV0Y2godXJsICwgcGFyYW1zKVxyXG5cdFx0LnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UuanNvbigpKVxyXG5cdFx0LnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0aWYgKGRhdGEuc3RhdHVzKSB7XHJcblx0XHRcdFx0XHR0aGlzLnNldFVzZXJJbmZvKGNyZWRlbnRpYWxzKVxyXG5cdFx0XHRcdFx0XHQvL2xvY2FsU3RvcmFnZS5zZXRJdGVtKCdjcmVkZW50aWFscycsIEpTT04uc3RyaW5naWZ5KGNyZWRlbnRpYWxzKSk7XHJcblx0XHRcdFx0fSBcclxuXHRcdFx0XHRyZXR1cm4gZGF0YTtcclxuXHRcdH0pO1xyXG5cclxuXHJcblx0fTtcclxuXHJcblx0Y2hlY2tGaWVsZHMgKGVtYWlsLCBwYXNzKXtcclxuXHRcdGlmKCFlbWFpbCl7cmV0dXJuICcyJ31cclxuXHRcdGlmKCFwYXNzKXtyZXR1cm4gJzMnfVxyXG5cdFx0aWYoIXRoaXMuY2hlY2tFbWFpbChlbWFpbCkpe3JldHVybiAnNCd9XHJcblx0XHRpZighdGhpcy5jaGVja1Bhc3N3b3JkKHBhc3MpKXtyZXR1cm4gJzUnfVxyXG5cdFx0ZWxzZSB7cmV0dXJuIHRydWV9XHJcblx0fTtcclxuXHRcclxuXHRjaGVja0VtYWlsIChlbWFpbCkgeyAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcclxuXHRcdGxldCByZWcgPSAvXlteXFxzQF0rQFteXFxzQF0rXFwuW15cXHNAXSskLztcclxuXHRcdHJldHVybiByZWcudGVzdChlbWFpbCk7XHJcblx0fTtcclxuXHRjaGVja1Bhc3N3b3JkKHBhc3N3b3JkKXtcclxuXHRcdGlmKHBhc3N3b3JkLmxlbmd0aCA+PSA4KXtcclxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdH0gZWxzZSB7IFxyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblx0fTtcclxuXHRcclxuXHJcblx0c2F2ZURhdGEoaXRlbSkgeyAgICAgICAgIFxyXG5cdFx0Y29uc29sZS5sb2coXCJTYXZpbmcgaXRlbS4uLiBcIiArIGl0ZW0ubmFtZSk7XHJcblx0XHRsZXQgaXBob25lID0ge1xyXG5cdFx0XHRcIm5hbWVcIjogXCJTYXZlZCBpUGhvbmVcIixcclxuXHRcdFx0XCJwcmljZVwiOiAxMjQ1OCxcclxuXHRcdFx0XCJwb3B1bGFyXCI6IHRydWUsXHJcblx0XHRcdFwiZGF0ZVwiOiAxNDY3NDQwMjAzXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gbmV3IFByb21pc2UoXHJcblx0XHRcdGZ1bmN0aW9uKHJlc29sdmUsIHJlamVjdCkgeyAgICAgICAgICAgIFxyXG5cdFx0XHRcdHJlc29sdmUoaXBob25lKTsgICAgICAgICAgXHJcblx0XHRcdH1cclxuXHRcdCk7XHJcblx0fVxyXG5cdFxyXG5cdHVwZGF0ZURhdGEoY291bnRlcikge1xyXG5cdFx0Y29uc29sZS5sb2coXCJVcGRhdGluZyBpdGVtLi4uIFwiICsgY291bnRlcik7XHJcblx0XHRsZXQgc2Ftc3VuZyA9IHtcclxuXHRcdFx0XCJuYW1lXCI6IFwiU2F2ZWQgU2Ftc3VuZ1wiLFxyXG5cdFx0XHRcInByaWNlXCI6IDEyNDU4LFxyXG5cdFx0XHRcInBvcHVsYXJcIjogdHJ1ZSxcclxuXHRcdFx0XCJkYXRlXCI6IDE0Njc0NDAyMDNcclxuXHRcdH1cclxuXHRcdHJldHVybiBQcm9taXNlLnJlc29sdmUoc2Ftc3VuZyk7XHJcblx0fVxyXG5cdHNldExvY2FsU3RvckdhbGxlcnlJbml0U3RhdHVzKHN0YXR1cyl7XHJcblx0XHRsb2NhbFN0b3JhZ2UuaXNHYWxsZXJ5SW5pdGVkID0gc3RhdHVzO1xyXG5cdH1cclxuXHRjaGFuZ2VMb2NhbFN0b3JMb2dnZWRJblN0YXR1cyhzdGF0dXMpe1xyXG5cdFx0bG9jYWxTdG9yYWdlLmlzVXNlckxvZ2dlZEluID0gc3RhdHVzO1xyXG5cdH1cclxuXHRnZXRMb2NhbFN0b3JhZ2VHYWxsZXJ5U3RhdHVzKCl7XHJcblx0XHRyZXR1cm4gbG9jYWxTdG9yYWdlLmlzR2FsbGVyeUluaXRlZDtcclxuXHR9XHJcblx0Z2V0SXNVc2VyTG9nZ2VkSW4oKXtcclxuXHRcdHJldHVybiBsb2NhbFN0b3JhZ2UuaXNVc2VyTG9nZ2VkSW47XHJcblx0fVxyXG5cclxuXHRjaGVja1VzZXIodXNlckRhdGEpe1xyXG5cdFx0bGV0IHVybCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvbG9naW4nO1xyXG5cdFx0bGV0IHBhcmFtcyA9IHtcclxuXHRcdFx0bWV0aG9kOiAnUE9TVCcsXHJcblx0XHRcdGhlYWRlcnM6IHtcclxuXHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcblx0XHRcdH0sXHJcblx0XHRcdGJvZHk6IEpTT04uc3RyaW5naWZ5KHVzZXJEYXRhKVxyXG5cdFx0fTtcclxuXHJcblx0XHRyZXR1cm4gZmV0Y2godXJsICwgcGFyYW1zKS50aGVuKHJlc3BvbnNlID0+IHJlc3BvbnNlLmpzb24oKSlcclxuXHRcdFxyXG5cdH1cclxuXHJcblx0XHRcdFxyXG5cdFx0XHRcclxuXHRcdFx0XHJcbn1cclxuXHRcclxuIFxyXG4iLCJleHBvcnQgZGVmYXVsdFx0Y2xhc3MgTG9naW5WaWV3IHtcclxuXHRjb25zdHJ1Y3RvciAoKXtcclxuXHRcdHRoaXMuRE9NRWxlbWVudHMgPSB7XHJcblx0XHRcdHN1Ym1pdEJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc3VibWl0QnRuXCIpLFxyXG5cdFx0XHQvL2VudGVyQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlbnRlckJ0blwiKSxcclxuXHRcdFx0ZXhpdEJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZXhpdEJ0blwiKSxcclxuXHRcdFx0ZW1haWwgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2lucHV0RW1haWxcIiksXHJcblx0XHRcdHBhc3N3b3JkIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNpbnB1dFBhc3N3b3JkXCIpLFxyXG5cdFx0XHRjaGVja0JveFJlbWVtZW1iZXJNZSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjaW5wdXRSZW1lbWJlclwiKSxcclxuXHRcdFx0XHJcblx0XHRcdGxvZ2luQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsb2dpbkJ0blwiKSxcclxuXHRcdFx0bWFpblBhZ2VCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21haW5QYWdlQnRuXCIpLFxyXG5cdFx0XHRwcm9maWxlQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcm9maWxlQnRuXCIpLFxyXG5cdFx0XHRnYWxsZXJ5QnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYWxsZXJ5QnRuXCIpLFxyXG5cdFx0XHRjb250YWN0c0J0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjY29udGFjdHNCdG5cIiksXHJcblx0XHRcdFxyXG5cclxuXHRcdFx0c2hvd1VzZXJEYXRhQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaG93VXNlckRhdGFCdG5cIiksXHJcblx0XHRcdHNob3dHYWxsZXJ5QnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaG93R2FsbGVyeUJ0blwiKSxcclxuXHJcblxyXG5cdFx0XHRhbGVydE1zZyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWxlcnQtbWVzc2FnZVwiKSwgXHJcblx0XHRcdG5vdEZpbGxlZEVtYWlsTXNnIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNub3RGaWxsZWRFbWFpbE1zZ1wiKSxcclxuXHRcdFx0bm90RmlsbGVkUGFzc01zZyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbm90RmlsbGVkUGFzc01zZ1wiKSxcclxuXHRcdFx0d3JvbmdFbWFpbE1zZyA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjd3JvbmdFbWFpbE1zZ1wiKSxcclxuXHRcdFx0d3JvbmdQYXNzTXNnIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3cm9uZ1Bhc3NNc2dcIilcclxuXHRcdH1cclxuXHR9O1xyXG5cdFxyXG5cdGdldExvZ0FuZFBhc3MoKXtcclxuXHRcdGxldCBjcmVkZW50aWFscyA9IHtcclxuXHRcdFx0XCJsb2dpblwiIDogdGhpcy5ET01FbGVtZW50cy5lbWFpbC52YWx1ZSxcclxuXHRcdFx0XCJwYXNzd29yZFwiIDogdGhpcy5ET01FbGVtZW50cy5wYXNzd29yZC52YWx1ZVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIGNyZWRlbnRpYWxzO1xyXG5cdH07XHJcblx0XHJcblx0c2hvd0Vycm9yTXNnKG1zZ0NvZGUpe1xyXG5cdFx0c3dpdGNoKG1zZ0NvZGUpe1xyXG5cdFx0XHRjYXNlICcxJzpcclxuXHRcdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy5hbGVydE1zZ119KTtcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRcclxuXHRcdFx0Y2FzZSAnMic6XHJcblx0XHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMubm90RmlsbGVkRW1haWxNc2ddfSlcclxuXHRcdFx0YnJlYWs7XHJcblx0XHRcdFxyXG5cdFx0XHRjYXNlICczJzpcclxuXHRcdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy5ub3RGaWxsZWRQYXNzTXNnXX0pXHJcblx0XHRcdGJyZWFrO1xyXG5cclxuXHRcdFx0Y2FzZSAnNCc6XHJcblx0XHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMud3JvbmdFbWFpbE1zZ119KVxyXG5cdFx0XHRicmVhaztcclxuXHJcblx0XHRcdGNhc2UgJzUnOlxyXG5cdFx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLndyb25nUGFzc01zZ119KVxyXG5cdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGhpZGVBbGVydE1zZ3MoKXtcclxuXHRcdHRoaXMuc2hvd0hpZGUoe1wiaGlkZVwiIDogW3RoaXMuRE9NRWxlbWVudHMuYWxlcnRNc2csXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMubm90RmlsbGVkRW1haWxNc2csIFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLm5vdEZpbGxlZFBhc3NNc2csXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMud3JvbmdFbWFpbE1zZyxcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy53cm9uZ1Bhc3NNc2ddfSk7XHJcblx0fTtcclxuXHRcclxuXHRcclxuXHRzaG93QWxlcnRNc2coKXtcclxuXHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMuYWxlcnRNc2ddfSlcclxuXHR9XHJcblx0c2hvd05vdEZpbGxlZEVtYWlsTXNnKCl7XHJcblx0XHR0aGlzLnNob3dIaWRlKHtcInNob3dcIiA6IFt0aGlzLkRPTUVsZW1lbnRzLm5vdEZpbGxlZEVtYWlsTXNnXX0pXHJcblx0fVxyXG5cdHNob3dOb3RGaWxsZWRQYXNzd29yZE1zZygpe1xyXG5cdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy5ub3RGaWxsZWRQYXNzTXNnXX0pXHJcblx0fVxyXG5cdHNob3dCYWRMb2dpbk1zZygpe1xyXG5cdFx0dGhpcy5zaG93SGlkZSh7XCJzaG93XCIgOiBbdGhpcy5ET01FbGVtZW50cy53cm9uZ0VtYWlsTXNnXX0pXHJcblx0fTtcclxuXHRcclxuXHRzaG93QmFkUGFzc3dvcmRNc2coKXtcclxuXHRcdHRoaXMuc2hvd0hpZGUoe1wic2hvd1wiIDogW3RoaXMuRE9NRWxlbWVudHMud3JvbmdQYXNzTXNnXX0pXHJcblx0fTtcclxuXHQvKlxyXG5cdG1haW5QYWdlQnRuIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiNtYWluUGFnZVwiKSxcclxuXHRcdFx0cHJvZmlsZUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjcHJvZmlsZUJ0blwiKSxcclxuXHRcdFx0Z2FsbGVyeUJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjZ2FsbGVyeUJ0blwiKSxcclxuXHRcdFx0Y29udGFjdHNCdG4gOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI2NvbnRhY3RzQnRuXCIpLFxyXG5cdCovXHJcblx0c2hvd0J1dHRvbnMoKXtcclxuXHRcdHRoaXMuc2hvd0VscyhbdGhpcy5ET01FbGVtZW50cy5tYWluUGFnZUJ0bixcclxuXHRcdHRoaXMuRE9NRWxlbWVudHMucHJvZmlsZUJ0bixcclxuXHRcdHRoaXMuRE9NRWxlbWVudHMuZ2FsbGVyeUJ0bixcclxuXHRcdHRoaXMuRE9NRWxlbWVudHMuY29udGFjdHNCdG4sXHJcblx0XHR0aGlzLkRPTUVsZW1lbnRzLmV4aXRCdG5dKVxyXG5cdH1cclxuXHRcclxuXHRoaWRlQnV0dG9ucygpe1xyXG5cdFx0dGhpcy5oaWRlRWxzKFt0aGlzLkRPTUVsZW1lbnRzLm1haW5QYWdlQnRuLFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnByb2ZpbGVCdG4sXHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuZ2FsbGVyeUJ0bixcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5jb250YWN0c0J0bixcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5leGl0QnRuXSlcclxuXHRcdFx0XHJcblx0XHR9XHJcblx0aGlkZUVudGVyQnRuKCl7XHJcblx0XHR0aGlzLmhpZGVFbHMoW3RoaXMuRE9NRWxlbWVudHMubG9naW5CdG5dKTtcclxuXHR9XHJcblx0c2hvd0VudGVyQnRuKCl7XHJcblx0XHR0aGlzLnNob3dFbHMoW3RoaXMuRE9NRWxlbWVudHMubG9naW5CdG5dKTtcclxuXHR9XHJcblx0c2hvd0hpZGUob2JqZWN0KXsgICAgXHJcblx0XHRmb3IodmFyIGtleSBpbiBvYmplY3QpIHsgXHJcblx0XHRcdHZhciBrZXkgPSBrZXk7XHJcblx0XHRcdHZhciB2YWx1ZSA9IG9iamVjdFtrZXldOyBcclxuXHRcdFx0dmFsdWUuZm9yRWFjaChET01FbGVtID0+IHtcclxuXHRcdFx0XHRET01FbGVtLmNsYXNzTGlzdC5yZW1vdmUoXCJzaG93XCIgLCBcImhpZGVcIik7XHJcblx0XHRcdFx0RE9NRWxlbS5jbGFzc0xpc3QuYWRkKGtleSk7XHJcblx0XHRcdH0pXHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0c2hvd0VscyhhcnIpe1xyXG5cdFx0YXJyLmZvckVhY2goRE9NRWxlbSA9PiB7XHJcblx0XHRcdFx0RE9NRWxlbS5jbGFzc0xpc3QucmVtb3ZlKFwiaGlkZVwiKTtcclxuXHRcdH0pXHJcblx0fVxyXG5cdGhpZGVFbHMoYXJyKXtcclxuXHRcdGFyci5mb3JFYWNoKERPTUVsZW0gPT4ge1xyXG5cdFx0XHRcdERPTUVsZW0uY2xhc3NMaXN0LmFkZChcImhpZGVcIik7XHJcblx0XHR9KVxyXG5cdH1cclxuXHJcblxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW5Db250cm9sbGVyIHsgXHJcbiAgICBjb25zdHJ1Y3Rvcihtb2RlbCwgdmlldywgdXRpbHMpIHtcclxuICAgICAgICB0aGlzLm1vZGVsID0gbW9kZWw7XHJcbiAgICAgICAgdGhpcy52aWV3ID0gdmlldztcclxuXHRcdFx0XHR0aGlzLnV0aWxzID0gdXRpbHM7XHJcblx0XHRcdFx0dGhpcy5pbml0KCk7XHJcblx0XHRcdFx0dGhpcy51c2Vyc0F2YXRhcnMgPSB7fTtcclxuXHRcdFx0XHRcclxuICAgIH0gICAgICAgIFxyXG5cclxuXHRcclxuXHRpbml0KCl7XHJcblx0XHRjb25zb2xlLmxvZyhcIm1haW4gaW5pdGVkXCIpXHJcblx0XHRcclxuXHRcdHRoaXMubW9kZWwuZ2V0UHJvZmlsZURhdGEoKS50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHR0aGlzLnZpZXcucHJvZmlsZURhdGEgPSBkYXRhWzBdO1xyXG5cdFx0fSk7IFx0XHJcblx0XHR0aGlzLm1vZGVsLmdldERhdGEoKS50aGVuKChkYXRhKSA9PiB7XHJcblx0XHRcdHRoaXMudmlldy5pbml0KGRhdGEpO1xyXG5cdFx0XHRjb25zb2xlLmxvZyhcIm1haW4tcG9zdHM6IFwiLCBkYXRhKVxyXG5cdFx0fSk7IFxyXG5cdFx0dGhpcy5tb2RlbC5nZXRBdmF0YXJzKClcclxuXHRcdC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHR0aGlzLnVzZXJzQXZhdGFycyA9IGRhdGE7XHJcblx0XHR9KTsgXHJcblx0XHR0aGlzLmJpbmRFdmVudHMoKTtcclxuXHR9XHJcblxyXG5cdGJpbmRFdmVudHMoKXtcclxuXHRcdHRoaXMudmlldy5ET01FbGVtZW50cy5hZGRQb3N0QnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiICwgdGhpcy5hZGRQb3N0LmJpbmQodGhpcykpXHJcblx0XHRcclxuXHR9XHJcblx0XHJcblx0YWRkUG9zdCAoKXtcclxuXHRcdGxldCBhdXRob3JOZXdQb3N0ID0gXHR0aGlzLnZpZXcuRE9NRWxlbWVudHMuYXV0aG9yTmV3UG9zdC52YWx1ZTtcclxuXHRcdGxldCB0ZXh0TmV3UG9zdCA9IHRoaXMudmlldy5ET01FbGVtZW50cy50ZXh0TmV3UG9zdC52YWx1ZTtcclxuXHRcdGxldCBuZXdEYXRlID0gbW9tZW50KCk7XHJcblx0XHRsZXQgYXZhdGFyID0gdGhpcy5jaG9vc2VBdmF0YXIodGhpcy52aWV3LkRPTUVsZW1lbnRzLmF1dGhvck5ld1Bvc3QudmFsdWUgLCB0aGlzLnVzZXJzQXZhdGFycyk7XHJcblx0XHRsZXQgcmUgPSAvXFxzKy87XHJcblx0XHRcclxuXHRcdGxldCBuZXdJbWFnZSA9IHRoaXMudmlldy5ET01FbGVtZW50cy5uZXdJbWFnZS52YWx1ZS5zcGxpdChyZSk7O1xyXG5cdFx0Ly9sZXQgbmFtZUxpc3QgPSBuYW1lcy5zcGxpdChyZSk7XHJcblxyXG5cdFx0XHJcblx0XHRcclxuXHRcdGxldCBwb3N0RGF0YSA9IHtcclxuXHRcdFx0XCJuYW1lXCIgOiBhdXRob3JOZXdQb3N0LFxyXG5cdFx0XHRcImRhdGVcIiA6IG5ld0RhdGUsXHJcblx0XHRcdFwidXJsXCIgOiBhdmF0YXIsXHJcblx0XHRcdFwidGV4dFwiOiB0ZXh0TmV3UG9zdCwgXHJcblx0XHRcdFwiaW1hZ2VzXCIgOiBuZXdJbWFnZVxyXG5cdFx0fVxyXG5cdFx0Y29uc29sZS5sb2coXCJwb3N0RGF0YVwiLCBwb3N0RGF0YSlcclxuXHRcdHRoaXMubW9kZWwuc2F2ZVBvc3QocG9zdERhdGEpXHJcblx0fTtcclxuXHJcblx0Y2hvb3NlQXZhdGFyKHZhbHVlICwgb2JqKXtcclxuXHRcdGNvbnNvbGUubG9nKFwidXNlckF2ZXRhcnNcIiwgb2JqKVxyXG5cdFx0Zm9yKGxldCBrZXkgaW4gb2JqKXtcclxuXHRcdFx0aWYgKGtleSA9PSB2YWx1ZSl7XHJcblx0XHRcdFx0cmV0dXJuIG9ialtrZXldO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cclxuXHRcdC8vIGlmKHZhbHVlID09IFwiSm9obnlcIil7cmV0dXJuIFwiaW1nL2F2YXRhci1kaGcucG5nXCJ9XHJcblx0XHQvLyBpZih2YWx1ZSA9PSBcIkdhcnJ5XCIpe3JldHVybiBcImltZy9hdmF0YXItZmF0LmpwZ1wifVxyXG5cdFx0Ly8gaWYodmFsdWUgPT0gXCJKYWNvYiBUaG9ybnRvblwiKXtyZXR1cm4gXCJpbWcvYXZhdGFyLW1kby5wbmdcIn1cclxuXHRcdC8vIGlmKHZhbHVlID09IFwiQ2FybG9zXCIpe3JldHVybiBcImltZy9zY3VsbC5qcGdcIn1cclxuXHR9O1xyXG5cclxuXHQvLyB7XHJcblx0Ly8gXHRcdFwiSm9obnlcIiA6IFwiaW1nL2F2YXRhci1kaGcucG5nXCIsXHJcblx0Ly8gXHRcIkdhcnJ5XCIgOiBcImltZy9hdmF0YXItZmF0LmpwZ1wiLFxyXG5cdC8vIFx0XCJKYWNvYiBUaG9ybnRvblwiIDogXCJpbWcvYXZhdGFyLW1kby5wbmdcIixcclxuXHQvLyBcdFwiQ2FybG9zXCIgOiBcImltZy9zY3VsbC5qcGdcIlxyXG5cdC8vIH1cclxuXHJcblxyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBNYWluTW9kZWwge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcblx0XHRcdHRoaXMuZ2V0VXJsID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wb3N0cyc7XHJcblx0XHRcdHRoaXMuYXZhdGFyc1VybCA9ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvYXZhdGFycyc7IFxyXG5cdFx0XHR0aGlzLnByb2ZpbGVVcmwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAwL3Byb2ZpbGUnOyBcclxuICAgIH1cclxuXHJcblx0XHRnZXREYXRhKCkge1xyXG5cdFx0XHRyZXR1cm4gZmV0Y2godGhpcy5nZXRVcmwpLnRoZW4ocmVzcG9uY2UgPT4gcmVzcG9uY2UuanNvbigpKVxyXG5cdFx0XHQudGhlbihkYXRhID0+IHtcclxuXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwiR2FsbGVyeSBpcyBsb2FkZWRcIik7XHJcblx0XHRcdFx0XHR0aGlzLnVzZXJzTGlzdERhdGEgPSBkYXRhO1xyXG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XHJcblx0XHRcdH0pICAgICAgICAgXHJcblx0fVxyXG5cclxuXHRnZXRBdmF0YXJzKCl7XHJcblx0XHRyZXR1cm4gZmV0Y2godGhpcy5hdmF0YXJzVXJsKS50aGVuKHJlc3BvbmNlID0+IHJlc3BvbmNlLmpzb24oKSlcclxuXHR9XHJcblxyXG5cdGdldFByb2ZpbGVEYXRhKCl7XHJcblx0XHRyZXR1cm4gZmV0Y2godGhpcy5wcm9maWxlVXJsKS50aGVuKHJlc3BvbmNlID0+IHJlc3BvbmNlLmpzb24oKSlcclxuXHR9XHJcblxyXG5cdHNhdmVQb3N0KHBvc3REYXRhKXtcclxuXHRcdGxldCB1cmwgPSBcImh0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9wb3N0c1wiO1xyXG5cdFx0bGV0IHBhcmFtcyA9IHtcclxuXHRcdFx0XHRcdG1ldGhvZDogJ1BPU1QnLFxyXG5cdFx0XHRcdFx0aGVhZGVyczoge1xyXG5cdFx0XHRcdFx0XHQnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcblx0XHRcdFx0XHR9LFxyXG5cdFx0XHRcdFx0Ym9keTogSlNPTi5zdHJpbmdpZnkocG9zdERhdGEpXHJcblx0XHR9O1xyXG5cdFx0cmV0dXJuIGZldGNoKHVybCAsIHBhcmFtcykudGhlbihyZXNwb25jZSA9PiByZXNwb25jZS5qc29uKCkpXHJcblx0XHRcdC50aGVuKGRhdGEgPT4ge1xyXG5cdFx0XHRcdFx0Y29uc29sZS5sb2coXCJzYXZlZCBwb3N0XCIgLCBkYXRhKVxyXG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XHJcblx0XHRcdH0pICAgXHJcblx0fVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW5WaWV3IHsgICAgICAgIFxyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5ET01FbGVtZW50cyA9IHtcclxuXHRcdFx0XHRcdHJlc3VsdEJsb2NrIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNyZXN1bHQtbWFpblwiKSxcclxuXHRcdFx0XHRcdGFkZE5ld1Bvc3RJbnB1dCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkTmV3UG9zdElucHV0XCIpLFxyXG5cdFx0XHRcdFx0YWRkTmV3Rm9ybSA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZm9ybS1hZGQtbmV3XCIpLFxyXG5cdFx0XHRcdFx0YWRkUG9zdEJ0biA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYWRkUG9zdG5CdG5cIiksXHJcblx0XHRcdFx0XHQvL25hbWVOZXdQb3N0IDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctbmFtZVwiKSxcclxuXHRcdFx0XHRcdGF1dGhvck5ld1Bvc3QgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1wb3N0LWF1dGhvclwiKSxcclxuXHRcdFx0XHRcdHRleHROZXdQb3N0IDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctdGV4dFwiKSxcclxuXHRcdFx0XHRcdG5ld0ltYWdlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNuZXctaW1hZ2VcIiksXHJcblx0XHRcdFx0XHRlbXB0eXNwYWNlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImJvZHlcIiksXHJcblx0XHRcdFx0XHR3ZW50VG9MaW5rIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3ZW50VG9cIiksXHJcblx0XHRcdFx0XHRmcmllbmRzV2l0aExpbmsgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ZyaWVuZHNXaXRoXCIpLFxyXG5cdFx0XHRcdFx0d29ya2VkQXRMaW5rIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN3b3JrZWRBdFwiKSxcclxuXHRcdFx0XHRcdGxpdmVzSW5MaW5rIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsaXZlc0luXCIpLFxyXG5cdFx0XHRcdFx0ZnJvbUxpbmsgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zyb21cIiksXHJcblx0XHRcdFx0XHQvL2ZyaWVuZHNXaXRoTGluayA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZnJpZW5kc1dpdGhcIiksXHJcblxyXG5cdFx0XHRcdH07IFxyXG5cdFx0XHRcdHRoaXMudXRpbHMgPSB1dGlsczsgICAgXHJcblx0XHRcdFx0dGhpcy5yZWFkeURhdGEgPSBbXTtcclxuXHRcdFx0XHR0aGlzLnByb2ZpbGVEYXRhID0ge307XHJcblx0XHR9XHJcblx0XHRcclxuXHRcdGluaXQoZGF0YSl7XHJcblx0XHRcdHRoaXMuaW5pdExpc3RlbmVycygpO1xyXG5cdFx0XHR0aGlzLnJlZnJlc2hQb3N0cyhkYXRhKTtcclxuXHRcdFx0dGhpcy5maWxsQWJvdXQodGhpcy5wcm9maWxlRGF0YSk7XHJcblx0XHR9XHJcblxyXG5cdFx0aW5pdExpc3RlbmVycygpe1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmFkZE5ld1Bvc3RJbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiAsIHRoaXMuc2hvd0Zvcm1Gb3JBZGRpbmcuYmluZCh0aGlzKSlcclxuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiICwgdGhpcy5oaWRlRm9ybUZvckFkZGluZy5iaW5kKHRoaXMpKVxyXG5cdFx0fVxyXG5cclxuXHRcdHNob3dGb3JtRm9yQWRkaW5nKGV2ZW50KXtcclxuXHRcdFx0aWYoZXZlbnQudGFyZ2V0LmlkID09IFwiYWRkTmV3UG9zdElucHV0XCIpe1xyXG5cdFx0XHRcdC8vdGhpcy5jbGVhckZvcm1Gb3JBZGQoKTtcclxuXHRcdFx0XHR0aGlzLnV0aWxzLnNob3dFbCh0aGlzLkRPTUVsZW1lbnRzLmFkZE5ld0Zvcm0pO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0aGlkZUZvcm1Gb3JBZGRpbmcoZXZlbnQpe1xyXG5cdFx0XHRpZihldmVudC50YXJnZXQuaWQgPT0gXCJlbXB0eXNwYWNlXCIpe1xyXG5cdFx0XHRcdHRoaXMuY2xlYXJGb3JtRm9yQWRkKCk7XHJcblx0XHRcdFx0dGhpcy51dGlscy5oaWRlRWwodGhpcy5ET01FbGVtZW50cy5hZGROZXdGb3JtKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdGNsZWFyRm9ybUZvckFkZCgpe1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmF1dGhvck5ld1Bvc3QudmFsdWUgPSBcIlwiO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnRleHROZXdQb3N0LnZhbHVlID0gXCJcIjtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5uZXdJbWFnZS52YWx1ZSA9IFwiXCI7XHJcblx0XHR9XHJcblxyXG5cdFx0cmVmcmVzaFBvc3RzKGRhdGEpe1xyXG5cdFx0XHR0aGlzLnJlYWR5RGF0YSA9IGRhdGE7XHJcblx0XHRcdHRoaXMuYml1bGRWaWV3KHRoaXMucmVhZHlEYXRhKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcclxuXHRcdGJpdWxkVmlldyAocmVhZHlEYXRhKXsgIFxyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLnJlc3VsdEJsb2NrLmlubmVySFRNTCA9IFwiXCI7XHJcblx0XHRcdGZvciAobGV0IGkgPSByZWFkeURhdGEubGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkgeyAgICBcclxuXHRcdFx0XHRcdHRoaXMuRE9NRWxlbWVudHMucmVzdWx0QmxvY2suaW5uZXJIVE1MICs9IHRoaXMuY3JlYXRlUG9zdChyZWFkeURhdGFbaV0pOyBcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHJcblx0XHRjcmVhdGVQb3N0IChpdGVtKSB7XHJcblx0XHRcdGxldCBpbWdzID0gYGA7XHJcblx0XHRcdGl0ZW0uaW1hZ2VzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcblx0XHRcdFx0aW1ncyArPSBcclxuXHRcdFx0XHRcdGA8aW1nIHN0eWxlPVwiZGlzcGxheTogaW5saW5lLWJsb2NrOyAgbWFyZ2luOiAxMHB4OyB2ZXJ0aWNhbC1hbGlnbjogYm90dG9tO1wiIGRhdGEtd2lkdGg9XCI2NDBcIiBkYXRhLWhlaWdodD1cIjY0MFwiIGRhdGEtYWN0aW9uPVwiem9vbVwiIHNyYz1cIiR7ZWxlbWVudH1cIj5cclxuXHRcdFx0XHRgXHJcblx0XHR9KTtcclxuXHJcblx0XHRcdHJldHVybiBcdGA8bGkgY2xhc3M9XCJydiBiIGFnelwiPlxyXG5cdFx0XHQ8aW1nIGNsYXNzPVwiYm9zIHZiIHliIGFmZlwiICBzcmM9ICR7aXRlbS51cmx9PlxyXG5cdFx0XHQ8ZGl2IGNsYXNzPVwicndcIj5cclxuXHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYnBkXCI+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYnBiXCI+XHJcblx0XHRcdFx0XHRcdDxzbWFsbCBjbGFzcz1cImFjeCBheGNcIj4ke2l0ZW0uZGF0ZX08L3NtYWxsPlxyXG5cdFx0XHRcdFx0XHQ8aDY+JHtpdGVtLm5hbWV9PC9oNj5cclxuXHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0PHAgY2xhc3M9XCJ0ZXh0LWxlZnRcIj4ke2l0ZW0udGV4dH08L3A+XHJcblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiYm95XCIgZGF0YS1ncmlkPVwiaW1hZ2VzXCI+JHtpbWdzfTwvZGl2PlxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdDwvZGl2PlxyXG5cdFx0PC9saT5gXHJcblx0XHR9O1xyXG5cclxuXHRcdGZpbGxBYm91dChvYmope1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLndlbnRUb0xpbmsuaW5uZXJIVE1MID0gb2JqLndlbnRUbztcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5mcmllbmRzV2l0aExpbmsuaW5uZXJIVE1MID0gb2JqLmZyaWVuZHM7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMud29ya2VkQXRMaW5rLmlubmVySFRNTCA9IG9iai53b3JrUGxhY2U7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMubGl2ZXNJbkxpbmsuaW5uZXJIVE1MID0gb2JqLmNvdW50cnk7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuZnJvbUxpbmsuaW5uZXJIVE1MID0gb2JqLnN0YXRlO1xyXG5cdFx0fVxyXG5cclxuLypcclxue1xyXG4gICAgICBcIm5hbWVcIjogXCJEYXZlXCIsXHJcbiAgICAgIFwibGFzdE5hbWVcIjogXCJHYW1hY2hlXCIsXHJcbiAgICAgIFwidXNlck5hbWVcIjogXCJSZWFjaHlcIixcclxuICAgICAgXCJlbWFpbFwiOiBcImRhdmUuZ2FtYWNoZUBnbWFpbC5jb21cIixcclxuICAgICAgXCJhZHJlc3NcIjogXCJGaXJzdCBhdmUsIGJsZCAxMiwgYXBwIDNcIixcclxuICAgICAgXCJhZHJlc3MyXCI6IFwiaG9zdGVsXCIsc3RhdGVcclxuICAgICAgXCJ3b3JrUGxhY2VcIjogXCJHaXRodWJcIixcclxuICAgICAgXCJjb3VudHJ5XCI6IFwiQ2FuYWRhXCIsXHJcbiAgICAgIFwiXCI6IFwiVG9yb250b1wiLFxyXG4gICAgICBcInppcFwiOiBcIjIyMzMyMlwiLFxyXG4gICAgICBcImZyaWVuZHNcIjogXCJPYmFtYVwiXHJcbiAgICB9XHJcbiovXHJcbn1cclxuXHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFByb2ZpbGVDb250cm9sbGVyIHsgXHJcblx0Y29uc3RydWN0b3IobW9kZWwsIHZpZXcsIHV0aWxzKSB7XHJcblx0XHRcdHRoaXMubW9kZWwgPSBtb2RlbDtcclxuXHRcdFx0dGhpcy52aWV3ID0gdmlldztcclxuXHRcdFx0dGhpcy51dGlscyA9IHV0aWxzO1xyXG5cdFx0XHR0aGlzLmluaXQoKTtcclxuXHRcdFx0XHJcblx0fVxyXG4gICBcclxuXHRcdGluaXQoKXtcclxuXHRcdGNvbnNvbGUubG9nKFwicHJvZmlsZSBpbml0ZWRcIik7XHJcbiAgICAgICAgdGhpcy5tb2RlbC5nZXRQcm9maWxlRGF0YSgpLnRoZW4oKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgLy90aGlzLmluaXRMaXN0ZW5lcnMoKVxyXG4gICAgICAgICAgICB0aGlzLnZpZXcuaW5pdChkYXRhKTtcclxuICAgICAgICAgICAgLy90aGlzLmlzTGFzdFBhZ2UoKTtcclxuICAgICAgICB9KTsgXHRcclxuXHR9XHJcbiAgICBcclxufVxyXG5cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUHJvZmlsZU1vZGVsIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG5cdFx0XHR0aGlzLnVybCA9IFwiaHR0cDovL2xvY2FsaG9zdDozMDAwL3Byb2ZpbGVcIlxyXG4gICAgfVxyXG5cclxuXHRcdGdldFByb2ZpbGVEYXRhKCl7XHJcblx0XHRcdHJldHVybiBmZXRjaCh0aGlzLnVybCkudGhlbihyZXNwb25jZSA9PiByZXNwb25jZS5qc29uKCkpXHJcbiAgICAgICAgLnRoZW4oZGF0YSA9PiB7XHJcblx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIlByb2ZpbGVEYXRhIGlzIGxvYWRlZFwiKTtcclxuXHRcdFx0XHRcdHJldHVybiBkYXRhO1xyXG4gICAgICAgIH0pIFxyXG5cdFx0fVxyXG5cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQcm9maWxlVmlldyB7ICAgICAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHRoaXMuRE9NRWxlbWVudHMgPSB7XHJcblx0XHRcdFx0XHRmaXJzdE5hbWUgOiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2ZpcnN0TmFtZVwiKSxcclxuXHRcdFx0XHRcdGxhc3ROYW1lIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsYXN0TmFtZVwiKSxcclxuXHRcdFx0XHRcdHVzZXJOYW1lIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN1c2VybmFtZVwiKSxcclxuXHRcdFx0XHRcdGVtYWlsIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlbWFpbFByb2ZpbGVcIiksXHJcblx0XHRcdFx0XHRhZGRyZXNzIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRyZXNzUHJvZmlsZVwiKSxcclxuXHRcdFx0XHRcdGFkZHJlc3MyIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRyZXNzMlByb2ZpbGVcIiksXHJcblx0XHRcdFx0XHRjb3VudHJ5IDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjb3VudHJ5UHJvZmlsZVwiKSxcclxuXHRcdFx0XHRcdHN0YXRlIDogZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzdGF0ZVByb2ZpbGVcIiksXHRcclxuXHRcdFx0XHRcdHppcCA6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjemlwXCIpXHJcbiAgICAgICAgfTsgICAgIFxyXG4gICAgICAgIHRoaXMucmVhZHlEYXRhO1xyXG4gICAgfVxyXG5cclxuXHRcdGluaXQoZGF0YSl7XHJcblx0XHRcdHRoaXMucmVhZHlEYXRhID0gZGF0YVswXTtcclxuXHRcdFx0dGhpcy5idWlsZFZpZXcodGhpcy5yZWFkeURhdGEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdGJ1aWxkVmlldyhkYXRhKXtcclxuXHRcdFx0Y29uc29sZS5sb2codGhpcy5ET01FbGVtZW50cyk7XHJcblx0XHRcdGNvbnNvbGUubG9nKGRhdGEpO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmZpcnN0TmFtZS52YWx1ZSA9IGRhdGEubmFtZTtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5sYXN0TmFtZS52YWx1ZSA9IGRhdGEubGFzdE5hbWU7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMudXNlck5hbWUudmFsdWUgPSBkYXRhLnVzZXJOYW1lO1xyXG5cdFx0XHR0aGlzLkRPTUVsZW1lbnRzLmVtYWlsLnZhbHVlID0gZGF0YS5lbWFpbDtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5hZGRyZXNzLnZhbHVlID0gZGF0YS5hZHJlc3M7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuYWRkcmVzczIudmFsdWUgPSBkYXRhLmFkcmVzczI7XHJcblx0XHRcdHRoaXMuRE9NRWxlbWVudHMuY291bnRyeS52YWx1ZSA9IGRhdGEuY291bnRyeTtcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5zdGF0ZS52YWx1ZSA9IGRhdGEuc3RhdGU7XHRcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy56aXAudmFsdWUgPSBkYXRhLnppcDtcclxuXHRcdH1cclxuICAgIFxyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBPYnNlcnZlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuZXZlbnRzID0ge307XG4gICAgfVxuXG4gICAgc3Vic2NyaWJlRXZlbnQobmFtZSwgZnVuYykge1xuICAgICAgICB0aGlzLmV2ZW50c1tuYW1lXSA9IGZ1bmM7XG4gICAgfVxuICAgIFxuICAgIGNhbGxFdmVudChuYW1lLCBhcmcpIHtcbiAgICAgICAgaWYgKHRoaXMuZXZlbnRzW25hbWVdKSB7XG4gICAgICAgICAgICB0aGlzLmV2ZW50c1tuYW1lXShhcmcpO1xuICAgICAgICB9XG4gICAgfVxufVxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FsbGVyeUNvbnRyb2xsZXIgeyBcclxuXHRjb25zdHJ1Y3Rvcihtb2RlbCwgdmlldywgb2JzZXJ2ZXIsIHV0aWxzKSB7XHJcblx0XHR0aGlzLm1vZGVsID0gbW9kZWw7XHJcblx0XHR0aGlzLnZpZXcgPSB2aWV3O1xyXG5cdFx0dGhpcy5vYnNlcnZlciA9IG9ic2VydmVyO1xyXG5cdFx0dGhpcy51dGlscyA9IHV0aWxzO1xyXG5cdFx0Ly8gICB0aGlzLnBhZ2VDb25maWcgPSB7XHJcblx0XHRcdC8vICAgICAgIGl0ZW1zUGVyUGFnZSA6IDEwLFxyXG5cdFx0XHQvLyBjdXJyZW50UGFnZTogMFxyXG5cdFx0XHQvLyB9XHJcblx0XHRcdHRoaXMuaW5pdCgpO1xyXG4gICAgfSAgICAgICAgXHJcblx0XHRcclxuXHRcdGluaXQoKXtcclxuXHRcdFx0Y29uc29sZS5sb2coXCJnYWxsZXJ5IGluaXRlZFwiKVxyXG5cdFx0XHRcdFx0dGhpcy5tb2RlbC5nZXREYXRhKCkudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0XHRcdFx0XHR0aGlzLnZpZXcuaW5pdChkYXRhKTtcclxuXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coXCJnYWxsZXJ5LWRhdGE6IFwiLCBkYXRhKVxyXG5cdFx0XHRcdFx0ICAgIC8vdGhpcy5pbml0TGlzdGVuZXJzKClcclxuXHRcdFx0XHRcdCAgICAvLyB0aGlzLnZpZXcuYnVpbGRVc2Vyc0xpc3QodGhpcy5nZXROZXh0UGFnZSgpKTtcclxuXHRcdFx0XHRcdCAgICAvLyB0aGlzLmlzTGFzdFBhZ2UoKTtcclxuXHRcdFx0XHRcdH0pOyBcdFxyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHQvL2luaXRMaXN0ZW5lcnMoKSB7XHJcblxyXG5cclxuXHRcdC8vIHRoaXMudmlldy5ET01FbGVtZW50cy51c2VyTGlzdC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy50YWJsZUxpbmVIYW5kbGVyLmJpbmQodGhpcykpO1xyXG5cdFx0XHJcblx0XHQvLyB0aGlzLnZpZXcuRE9NRWxlbWVudHMuc2VhcmNoLmFkZEV2ZW50TGlzdGVuZXIoXCJrZXl1cFwiLCB0aGlzLnNlYXJjaEhhbmRsZXIuYmluZCh0aGlzKSk7XHJcblx0XHQvLyB0aGlzLnZpZXcuRE9NRWxlbWVudHMuZW1haWxEcm9wZG93bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5zb3J0aW5nSGFuZGxlci5iaW5kKHRoaXMpKTtcclxuXHRcdC8vIHRoaXMudmlldy5ET01FbGVtZW50cy5yb2xlRHJvcGRvd24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIHRoaXMuc29ydGluZ0hhbmRsZXIuYmluZCh0aGlzKSk7XHJcblx0XHRcclxuICAgIC8vICAgICB0aGlzLnZpZXcuRE9NRWxlbWVudHMubmV4dEJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5nZXROZXh0UGFnZUhhbmRsZXIuYmluZCh0aGlzKSk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gdGFibGVMaW5lSGFuZGxlcihldmVudCkge1xyXG4gICAgLy8gICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHQvLyBsZXQgaXNCdXR0b24gPSBldmVudC50YXJnZXQuZ2V0QXR0cmlidXRlKFwiZGF0YS1yb3ctaWRcIik7XHJcblx0XHQvLyBpc0J1dHRvbiA/IHRoaXMub3BlbkRldGFpbChpc0J1dHRvbikgOiB0aGlzLnZpZXcuc2VsZWN0VGFibGVMaW5lKGV2ZW50KTtcclxuXHRcdC8vIH1cclxuXHJcblx0XHQvLyBvcGVuRGV0YWlsKGJ1dHRvbklkKSB7XHJcblx0XHQvLyBcdGxldCB1c2VyID0gdGhpcy5tb2RlbC5nZXRVc2VyQnlJZChidXR0b25JZCkudGhlbigoZGF0YSkgPT4ge1xyXG5cdFx0Ly8gXHRcdFx0XHRcdHRoaXMudmlldy5zaG93U2luZ2xlVXNlcihkYXRhKTtcclxuXHRcdC8vIFx0XHRcdH0pOyBcdFxyXG5cdFx0Ly8gXHR9XHJcblx0XHRcdFxyXG5cdFx0Ly8gXHRzZWFyY2hIYW5kbGVyKGV2ZW50KSB7XHJcblx0XHQvLyBcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHQvLyBcdGxldCB2YWx1ZSA9IGV2ZW50LnRhcmdldC52YWx1ZTtcclxuXHRcdC8vIFx0aWYgKGV2ZW50LmtleUNvZGUgPT09IDEzICYmICh2YWx1ZS5sZW5ndGggPT0gMCB8fCB2YWx1ZS5sZW5ndGggPiAyKSkge1xyXG5cdFx0Ly8gXHRcdHRoaXMucGFnZUNvbmZpZy5jdXJyZW50UGFnZSA9IDA7XHJcblx0XHQvLyBcdFx0XHRcdFx0dGhpcy52aWV3LmNsZWFyTGlzdCgpO1xyXG5cdFx0Ly8gXHRcdHRoaXMudmlldy5idWlsZFVzZXJzTGlzdCh0aGlzLmdldE5leHRQYWdlKCksIHRoaXMudXRpbHMuc29ydGluZ0NvbmZpZ1tcIkZpbmRcIl0pO1xyXG5cdFx0Ly8gXHR9XHJcblx0XHQvLyB9XHJcblxyXG5cdFx0Ly8gc29ydGluZ0hhbmRsZXIoZXZlbnQpIHtcclxuXHRcdC8vIFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdC8vIFx0dGhpcy52aWV3LnVwZGF0ZUJ1dHRvblRleHQoZXZlbnQpO1xyXG5cdFx0Ly8gXHR0aGlzLmFwcGx5U29ydGluZ01ldGhvZCh0aGlzLnZpZXcuZ2V0U29ydGluZ1R5cGUoZXZlbnQpKTtcclxuXHRcdC8vIH1cclxuXHRcdFx0XHJcblx0XHQvLyBcdGdldE5leHRQYWdlSGFuZGxlcihldmVudCkge1xyXG5cdFx0Ly8gXHRcdFx0ZXZlbnQgJiYgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdC8vIFx0XHRcdHRoaXMudmlldy5idWlsZFVzZXJzTGlzdCh0aGlzLmdldE5leHRQYWdlKCkpO1xyXG5cdFx0Ly8gXHRcdFx0dGhpcy5pc0xhc3RQYWdlKCk7IFxyXG5cdFx0Ly8gXHR9XHJcblxyXG5cdFx0Ly8gYXBwbHlTb3J0aW5nTWV0aG9kKHNvcnRpbmdUeXBlKSB7XHJcblx0XHQvLyBcdFx0XHRpZiAoIXNvcnRpbmdUeXBlKXtyZXR1cm59XHJcblx0XHQvLyBcdHRoaXMucGFnZUNvbmZpZy5jdXJyZW50UGFnZSA9IDA7XHJcblx0XHQvLyBcdFx0XHR0aGlzLnZpZXcuY2xlYXJMaXN0KCk7XHJcblx0XHQvLyBcdHRoaXMudmlldy5idWlsZFVzZXJzTGlzdCh0aGlzLmdldE5leHRQYWdlKCksIHRoaXMudXRpbHMuc29ydGluZ0NvbmZpZ1tzb3J0aW5nVHlwZV0pO1xyXG5cdFx0Ly8gfVxyXG5cclxuXHRcdC8vIFx0Z2V0TmV4dFBhZ2UoKXtcclxuXHRcdC8vIFx0bGV0IHN0YXJ0ID0gdGhpcy5wYWdlQ29uZmlnLml0ZW1zUGVyUGFnZSAqIHRoaXMucGFnZUNvbmZpZy5jdXJyZW50UGFnZTtcclxuXHRcdC8vIFx0bGV0IGVuZCA9IHRoaXMucGFnZUNvbmZpZy5pdGVtc1BlclBhZ2UgKyBzdGFydDtcclxuXHRcdC8vIFx0dGhpcy5wYWdlQ29uZmlnLmN1cnJlbnRQYWdlKys7XHJcblx0XHQvLyBcdHJldHVybiB0aGlzLm1vZGVsLnVzZXJzTGlzdERhdGEuc2xpY2Uoc3RhcnQsIGVuZCk7XHJcblx0XHQvLyBcdH1cclxuXHRcdFx0XHJcblx0XHQvLyBcdGlzTGFzdFBhZ2UoKSB7XHJcblx0XHQvLyBcdFx0XHRpZiAodGhpcy5pc01heFBhZ2UoKSl7XHJcblx0XHQvLyBcdFx0XHRcdFx0dGhpcy52aWV3LmhpZGVOZXh0UGFnZSgpO1x0XHJcblx0XHQvLyBcdFx0XHRcdFx0dGhpcy5jb3VudFN0YXRzKCk7XHJcblx0XHQvLyBcdFx0XHR9XHJcblx0XHQvLyBcdH1cclxuXHJcblx0XHQvLyBpc01heFBhZ2UoKSB7XHJcblx0XHQvLyBcdHJldHVybiAodGhpcy5wYWdlQ29uZmlnLmN1cnJlbnRQYWdlICogdGhpcy5wYWdlQ29uZmlnLml0ZW1zUGVyUGFnZSkgPj0gdGhpcy5tb2RlbC51c2Vyc0xpc3REYXRhLmxlbmd0aDtcclxuXHRcdC8vIH1cclxuXHJcblx0XHQvLyBjb3VudFN0YXRzKCl7XHJcblx0XHQvLyBcdGxldCBzdGF0cyA9IHRoaXMubW9kZWwudXNlcnNMaXN0RGF0YS5yZWR1Y2UoKHN1bSwgaXRlbSkgPT4ge1xyXG5cdFx0Ly8gXHRcdChpdGVtLnJvbGUgPT0gXCJBZG1pblwiKSA/IHN1bS5hZG1pbnMrKyA6XHRzdW0udXNlcnMrKztcclxuXHRcdC8vIFx0XHRyZXR1cm4gc3VtO1xyXG5cdFx0Ly8gXHR9LCB7YWRtaW5zOjAsIHVzZXJzOjB9KTtcclxuXHRcdC8vIFx0dGhpcy52aWV3LnNob3dTdGF0cyhzdGF0cyk7XHJcblx0XHQvLyB9XHJcblx0XHRcclxuICAgIFxyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHYWxsZXJ5TW9kZWwge1xyXG4gICAgY29uc3RydWN0b3IoKSB7XHJcbiAgICAgICAgdGhpcy5nZXRVcmwgPSAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2dhbGxlcnknO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERhdGEoKSB7XHJcbiAgICAgICAgcmV0dXJuIGZldGNoKHRoaXMuZ2V0VXJsKS50aGVuKHJlc3BvbmNlID0+IHJlc3BvbmNlLmpzb24oKSlcclxuICAgICAgICAudGhlbihkYXRhID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJHYWxsZXJ5IGlzIGxvYWRlZFwiKTtcclxuICAgICAgICAgICAgdGhpcy51c2Vyc0xpc3REYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgcmV0dXJuIGRhdGE7XHJcbiAgICAgICAgfSkgICAgICAgICBcclxuICAgIH1cclxuXHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FsbGVyeVZpZXcgeyAgICAgICAgXHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICB0aGlzLkRPTUVsZW1lbnRzID0ge1xyXG5cdFx0XHRcdFx0cmVzdWx0QmxvY2s6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3Jlc3VsdCcpLFxyXG4gICAgICAgIH07ICAgICBcclxuXHRcdFx0IHRoaXMucmVhZHlEYXRhRm9yR2FsbGVyeSA9IFtdO1xyXG5cdFx0XHQgdGhpcy52aXNpYmxlRGF0YSA9IFtdO1xyXG4gICAgICAgIFxyXG5cdFx0fVxyXG5cdFx0XHJcblx0XHRpbml0KGRhdGEpe1xyXG5cdFx0XHR0aGlzLnJlZnJlc2hHYWxsZXJ5KGRhdGEpO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJlZnJlc2hHYWxsZXJ5KGRhdGEpe1xyXG5cdFx0XHR0aGlzLnByZXBhcmVEYXRhKGRhdGEpO1xyXG5cdFx0XHR0aGlzLmJpdWxkR2FsbGVyeSh0aGlzLnZpc2libGVEYXRhKTtcclxuXHRcdH07XHJcblx0XHRcclxuXHRcdHByZXBhcmVEYXRhIChkYXRhKSB7XHJcblx0XHRcdHRoaXMucmVhZHlEYXRhRm9yR2FsbGVyeSA9IGRhdGEubWFwKChpdGVtLCBpbmRleCkgPT4geyAgICAgICAgICAgICAgICAgXHJcblx0XHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dXJsOiB0aGlzLnVybEZvbWF0KGl0ZW0udXJsKSxcclxuXHRcdFx0XHRcdFx0XHRcdFx0bmFtZTogdGhpcy5uYW1lRm9ybWF0KGl0ZW0ubmFtZSksXHJcblx0XHRcdFx0XHRcdFx0XHRcdGl0ZW1JRDogaXRlbS5pZFxyXG5cdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHR0aGlzLnZpc2libGVEYXRhID0gW107XHJcblx0XHRcdHRoaXMudmlzaWJsZURhdGEucHVzaC5hcHBseSh0aGlzLnZpc2libGVEYXRhLFx0dGhpcy5yZWFkeURhdGFGb3JHYWxsZXJ5KTtcclxuXHRcdH07XHJcblxyXG5cdFx0Yml1bGRHYWxsZXJ5ICh2aXNpYmxlRGF0YSl7ICBcclxuXHRcdFx0dGhpcy5ET01FbGVtZW50cy5yZXN1bHRCbG9jay5pbm5lckhUTUwgPSBcIlwiO1xyXG5cdFx0XHRmb3IgKGxldCBpID0gMDsgaSA8IHZpc2libGVEYXRhLmxlbmd0aDsgaSsrKSB7ICAgIFxyXG5cdFx0XHRcdFx0dGhpcy5ET01FbGVtZW50cy5yZXN1bHRCbG9jay5pbm5lckhUTUwgKz0gdGhpcy5jcmVhdGVHYWxsZXJ5SXRlbSh2aXNpYmxlRGF0YVtpXSk7IFxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0Y3JlYXRlR2FsbGVyeUl0ZW0gKGl0ZW0pIHtcclxuXHRcdFx0cmV0dXJuIFx0YDxkaXYgY2xhc3M9XCJjb2wtbWQtNCBnYWxsZXJ5LWNhcmRcIiBpZCA9ICR7aXRlbS5pdGVtSUR9PlxyXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cImNhcmQgbWItNCBib3gtc2hhZG93IGdhbGxlcnktaXRlbVwiID5cclxuXHRcdFx0XHRcdFx0XHQ8aW1nIHNyYz1cIiR7aXRlbS51cmx9XCIgYWx0PVwiJHtpdGVtLm5hbWV9XCIgY2xhc3M9XCJjYXJkLWltZy10b3BcIiBkYXRhLXNyYz1cImhvbGRlci5qcy8xMDBweDIyNT90aGVtZT10aHVtYiZhbXA7Ymc9NTU1OTVjJmFtcDtmZz1lY2VlZWYmYW1wO3RleHQ9VGh1bWJuYWlsXCIgZGF0YS1ob2xkZXItcmVuZGVyZWQ9XCJ0cnVlXCIgc3R5bGU9XCJoZWlnaHQ6IDIyNXB4OyB3aWR0aDogMTAwJTsgZGlzcGxheTogYmxvY2s7XCI+XHJcblx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cImNhcmQtYm9keVwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwiY2FyZC10ZXh0IG1iLTRcIj4ke2l0ZW0ubmFtZX08L2Rpdj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cImJ0bi1ncm91cFwiPlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnRuIGJ0bi1vdXRsaW5lLXNlY29uZGFyeVwiPlZpZXc8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQ8YnV0dG9uIHR5cGU9XCJidXR0b25cIiBjbGFzcz1cImJ0biBidG4tb3V0bGluZS1zZWNvbmRhcnkgZWRpdFwiPkVkaXQ8L2J1dHRvbj5cclxuXHRcdFx0XHRcdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0XHRcdFx0XHRcdDxkaXYgIG5hbWUgPSBcImRlbGV0ZS1pbWdcIiBjbGFzcyA9IFwiYnRuIGJ0bi1kYW5nZXJcIiAgdGl0bGUgPSBcItCj0LTQsNC70LjRgtGMINC00LDQvdC90L7QtSDQuNC30L7QsdGA0LDQttC10L3QuNC1XCI+INCj0LTQsNC70LjRgtGMIDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdDwvZGl2PlxyXG5cdFx0XHRcdFx0XHRcdFxyXG5cdFx0XHRcdFx0PC9kaXY+XHJcblx0XHRcdFx0PC9kaXY+YDtcclxuXHRcdH07XHJcblx0XHRuYW1lRm9ybWF0IChuYW1lKXtcclxuXHRcdFx0cmV0dXJuICBuYW1lID8gbmFtZVswXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zdWJzdHJpbmcoMSkudG9Mb3dlckNhc2UoKSA6IFwiTG9obiBEb2hcIjtcclxuXHRcdH07XHJcblx0XHR1cmxGb21hdCAgKHVybCl7XHJcblx0XHRcdFx0cmV0dXJuICAodXJsLmluZGV4T2YoXCJodHRwczovL1wiKSkgPT09IC0xID8gYGh0dHBzOi8vJHt1cmx9YCA6ICB1cmw7IFxyXG5cdFx0fTtcclxuXHJcblxyXG59XHJcblxyXG4iLCJpbXBvcnQge3VwZGF0ZVJvdXRlfSBmcm9tICcuL3JvdXRlci5qcydcblxuXG53aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIHVwZGF0ZVJvdXRlKTtcbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdoYXNoY2hhbmdlJywgdXBkYXRlUm91dGUpO1xuXG4iXX0=
