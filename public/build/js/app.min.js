var galleryController=function(){"use strict";return class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)}),this.initListeners()}initListeners(){this.view.DOMElements.addImgBtn.addEventListener("click",this.addImage.bind(this)),this.view.DOMElements.editBtn.addEventListener("click",this.editCard.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.showFormForEditing.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.deleteImage.bind(this))}addImage(t){if("add-img"==t.target.id){let t=this.view.createItemForAdd();this.model.saveData(t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}showFormForEditing(t){if(t.target.classList.contains("edit")){scroll(0,0),this.view.toggleAddEditBtn();let e=t.target.closest(".gallery-card").id;this.model.getItem(e).then(t=>{this.view.fillFormForEdit(t),this.objectFromresponse=t}).catch(function(t){console.log(t)})}}editCard(t){if("edit-img"==t.target.id){let t=this.view.createItemForAdd(),e=this.objectFromresponse.id;this.model.editGallery(e,t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}deleteImage(t){if(t.target.classList.contains("remove")){let e=t.target.closest(".gallery-card").id;this.model.removeItem(e).then(t=>this.view.refreshGallery(t))}}}}(),galleryModel=function(){"use strict";return class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e).then(t=>t.json())}saveData(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/gallery",e).then(t=>t.json())}editGallery(t,e){let s=`http://localhost:3000/gallery/${t}`,i={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};return fetch(s,i).then(t=>t.json())}removeItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(t=>t.json())}}}(),galleryView=function(){"use strict";return class{constructor(t){this.DOMElements={resultBlock:document.querySelector("#result"),formForAdding:document.querySelector("#form-add-new"),addNewImgBtn:document.querySelector("#add-new-img"),addImgBtn:document.querySelector("#add-img"),editBtn:document.querySelector("#edit-img"),newName:document.querySelector("#new-name"),newUrl:document.querySelector("#new-url"),newDescription:document.querySelector("#new-descr")},this.utils=t,this.readyDataForGallery=[],this.visibleData=[]}init(t){this.initListeners(),this.refreshGallery(t)}initListeners(){this.DOMElements.addNewImgBtn.addEventListener("click",this.showFormForAdding.bind(this))}showFormForAdding(t){"add-new-img"==t.target.id&&(this.clearFormForAdd(),this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.editBtn))}clearFormForAdd(){this.DOMElements.newName.value="",this.DOMElements.newUrl.value="",this.DOMElements.newDescription.value=""}fillFormForEdit(t){let e=t;this.DOMElements.newName.value=e.name,this.DOMElements.newUrl.value=e.url,this.DOMElements.newDescription.value=e.description}hideFormForAdding(){this.utils.hideEl(this.DOMElements.formForAdding)}toggleAddEditBtn(){this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.addImgBtn)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.visibleData=[],this.readyDataForGallery=[],t.forEach(t=>{if(!t.name)return!1;this.readyDataForGallery.push(t)}),this.readyDataForGallery.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),description:t.description,itemID:t.id})),this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.id}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${this.descrFormat(t.description)}</div>\n\t\t\t\t\t\t\t\t\t<div name = "edit-img" class="btn btn-warning edit"  title = "Редактировать данное изображение">Редактировать</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger remove"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}createItemForAdd(){return{url:this.urlFomat(this.DOMElements.newUrl.value),name:this.nameFormat(this.DOMElements.newName.value),description:this.DOMElements.newDescription.value}}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}descrFormat(t){return t||""}}}(),observer=function(){"use strict";return class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}}}(),loginController=function(){"use strict";return class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}}(),loginModel=function(){"use strict";return class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}}}(),loginView=function(){"use strict";return class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}}}(),mainController=function(){"use strict";return class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}}(),mainModel=function(){"use strict";return class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}}}(),mainView=function(){"use strict";return class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}}(),profileController=function(){"use strict";return class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}}(),profileModel=function(){"use strict";return class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}}}(),profileView=function(){"use strict";return class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}}}(),contactsController=function(){"use strict";return class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("contacts inited"),this.view.init(),this.initListeners(),this.model.getData().then(t=>{this.view.buildWall(t)})}initListeners(){this.view.DOMElements.sendInfoBTN.addEventListener("click",this.sendInfo.bind(this))}sendInfo(){let t={name:this.view.DOMElements.name.value,email:this.view.DOMElements.email.value,phone:this.view.DOMElements.phone.value,msg:this.view.DOMElements.msg.value,date:moment()};console.log(t),this.model.saveMsg(t)}}}(),contactsModel=function(){"use strict";return class{constructor(){this.url="http://localhost:3000/wall"}getData(){return fetch(this.url).then(t=>t.json()).then(t=>t)}saveMsg(t){console.log(t);let e=this.url,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json())}}}(),contactsView=function(){"use strict";return class{constructor(){this.DOMElements={googleMap:document.querySelector("#googleMap"),name:document.querySelector("#contactsName"),email:document.querySelector("#contactsEmail"),phone:document.querySelector("#contactsTel"),msg:document.querySelector("#contactsMessage"),sendInfoBTN:document.querySelector("#sendInfoBTN"),wall:document.querySelector("#wall")}}init(){this.buildGoogleMap()}buildGoogleMap(){var t=this.DOMElements.googleMap,e={center:new google.maps.LatLng(43.6,-79.3),zoom:8};new google.maps.Map(t,e)}buildWall(t){let e=t;console.log(e);for(let t=e.length-1;t>=0;t--)this.DOMElements.wall.innerHTML+=this.createWallItem(e[t])}createWallItem(t){return`<div class="col-md-12" id = ${t.id}>\n\n\t\t\t\t\t\t\t\t<div class="wall-item">\n\t\t\t\t\t\t\t\t\t<div class ="col-md-4">\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>User</b>: ${t.name}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Email</b>: ${t.email}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Phone</b>: ${t.phone}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Date</b>: ${t.date}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class="text-left col-md-8"> <strong>${t.msg}</strong></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr class="mb-4">\n\t\t\t\t\t\t\t</div>`}}}();!function(){"use strict";class t{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t){t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}document.querySelector("#login-view"),document.querySelector("#main-view"),document.querySelector("#profile-view"),document.querySelector("#gallery-view"),document.querySelector("#mainPageBtn"),document.querySelector("#profileBtn"),document.querySelector("#galleryBtn");const e=document.querySelector("#wrapper");let s={"":()=>{t.initTemplate(e,"login-view"),new class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}(new class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}},new class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}},t)},mainPage:()=>{t.initTemplate(e,"mainPage-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}(new class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}(t),t)},profile:()=>{t.initTemplate(e,"profile-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}(new class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}},new class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}},new t)},gallery:()=>{t.initTemplate(e,"gallery-view");let s=new class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}};new class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)}),this.initListeners()}initListeners(){this.view.DOMElements.addImgBtn.addEventListener("click",this.addImage.bind(this)),this.view.DOMElements.editBtn.addEventListener("click",this.editCard.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.showFormForEditing.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.deleteImage.bind(this))}addImage(t){if("add-img"==t.target.id){let t=this.view.createItemForAdd();this.model.saveData(t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}showFormForEditing(t){if(t.target.classList.contains("edit")){scroll(0,0),this.view.toggleAddEditBtn();let e=t.target.closest(".gallery-card").id;this.model.getItem(e).then(t=>{this.view.fillFormForEdit(t),this.objectFromresponse=t}).catch(function(t){console.log(t)})}}editCard(t){if("edit-img"==t.target.id){let t=this.view.createItemForAdd(),e=this.objectFromresponse.id;this.model.editGallery(e,t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}deleteImage(t){if(t.target.classList.contains("remove")){let e=t.target.closest(".gallery-card").id;this.model.removeItem(e).then(t=>this.view.refreshGallery(t))}}}(new class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e).then(t=>t.json())}saveData(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/gallery",e).then(t=>t.json())}editGallery(t,e){let s=`http://localhost:3000/gallery/${t}`,i={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};return fetch(s,i).then(t=>t.json())}removeItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(t=>t.json())}},new class{constructor(t){this.DOMElements={resultBlock:document.querySelector("#result"),formForAdding:document.querySelector("#form-add-new"),addNewImgBtn:document.querySelector("#add-new-img"),addImgBtn:document.querySelector("#add-img"),editBtn:document.querySelector("#edit-img"),newName:document.querySelector("#new-name"),newUrl:document.querySelector("#new-url"),newDescription:document.querySelector("#new-descr")},this.utils=t,this.readyDataForGallery=[],this.visibleData=[]}init(t){this.initListeners(),this.refreshGallery(t)}initListeners(){this.DOMElements.addNewImgBtn.addEventListener("click",this.showFormForAdding.bind(this))}showFormForAdding(t){"add-new-img"==t.target.id&&(this.clearFormForAdd(),this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.editBtn))}clearFormForAdd(){this.DOMElements.newName.value="",this.DOMElements.newUrl.value="",this.DOMElements.newDescription.value=""}fillFormForEdit(t){let e=t;this.DOMElements.newName.value=e.name,this.DOMElements.newUrl.value=e.url,this.DOMElements.newDescription.value=e.description}hideFormForAdding(){this.utils.hideEl(this.DOMElements.formForAdding)}toggleAddEditBtn(){this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.addImgBtn)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.visibleData=[],this.readyDataForGallery=[],t.forEach(t=>{if(!t.name)return!1;this.readyDataForGallery.push(t)}),this.readyDataForGallery.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),description:t.description,itemID:t.id})),this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.id}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${this.descrFormat(t.description)}</div>\n\t\t\t\t\t\t\t\t\t<div name = "edit-img" class="btn btn-warning edit"  title = "Редактировать данное изображение">Редактировать</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger remove"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}createItemForAdd(){return{url:this.urlFomat(this.DOMElements.newUrl.value),name:this.nameFormat(this.DOMElements.newName.value),description:this.DOMElements.newDescription.value}}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}descrFormat(t){return t||""}}(t),s,new t)},contacts:()=>{t.initTemplate(e,"contact-view"),console.log("Contacts route is loaded"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("contacts inited"),this.view.init(),this.initListeners(),this.model.getData().then(t=>{this.view.buildWall(t)})}initListeners(){this.view.DOMElements.sendInfoBTN.addEventListener("click",this.sendInfo.bind(this))}sendInfo(){let t={name:this.view.DOMElements.name.value,email:this.view.DOMElements.email.value,phone:this.view.DOMElements.phone.value,msg:this.view.DOMElements.msg.value,date:moment()};console.log(t),this.model.saveMsg(t)}}(new class{constructor(){this.url="http://localhost:3000/wall"}getData(){return fetch(this.url).then(t=>t.json()).then(t=>t)}saveMsg(t){console.log(t);let e=this.url,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json())}},new class{constructor(){this.DOMElements={googleMap:document.querySelector("#googleMap"),name:document.querySelector("#contactsName"),email:document.querySelector("#contactsEmail"),phone:document.querySelector("#contactsTel"),msg:document.querySelector("#contactsMessage"),sendInfoBTN:document.querySelector("#sendInfoBTN"),wall:document.querySelector("#wall")}}init(){this.buildGoogleMap()}buildGoogleMap(){var t=this.DOMElements.googleMap,e={center:new google.maps.LatLng(43.6,-79.3),zoom:8};new google.maps.Map(t,e)}buildWall(t){let e=t;console.log(e);for(let t=e.length-1;t>=0;t--)this.DOMElements.wall.innerHTML+=this.createWallItem(e[t])}createWallItem(t){return`<div class="col-md-12" id = ${t.id}>\n\n\t\t\t\t\t\t\t\t<div class="wall-item">\n\t\t\t\t\t\t\t\t\t<div class ="col-md-4">\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>User</b>: ${t.name}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Email</b>: ${t.email}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Phone</b>: ${t.phone}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Date</b>: ${t.date}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class="text-left col-md-8"> <strong>${t.msg}</strong></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr class="mb-4">\n\t\t\t\t\t\t\t</div>`}},new t)}};function i(){let e=document.location.hash.replace(/^#/,"");e&&!t.isLoggedIn()?t.navigateTo(""):function(t){let e=s[t];e&&e()}(e)}window.addEventListener("load",i),window.addEventListener("hashchange",i)}();var router=function(t){"use strict";class e{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t){t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}document.querySelector("#login-view"),document.querySelector("#main-view"),document.querySelector("#profile-view"),document.querySelector("#gallery-view"),document.querySelector("#mainPageBtn"),document.querySelector("#profileBtn"),document.querySelector("#galleryBtn");const s=document.querySelector("#wrapper");let i={"":()=>{e.initTemplate(s,"login-view"),new class{constructor(t,e,s){this.loginModel=t,this.loginView=e,this.utils=s,this.init()}init(){this.fillStartPageUserData(),this.bindEvents()}fillStartPageUserData(){1==this.loginModel.getCheckboxStatus()?this.loginModel.getData().then(t=>{this.loginView.DOMElements.checkBoxRemememberMe.checked=!0,this.loginView.DOMElements.email.value=t.login,this.loginView.DOMElements.password.value=t.password}):(this.loginView.DOMElements.checkBoxRemememberMe.checked=!1,this.loginView.DOMElements.email.value="",this.loginView.DOMElements.password.value="")}bindEvents(){this.loginView.DOMElements.submitBtn.addEventListener("click",this.initValidation.bind(this)),this.loginView.DOMElements.exitBtn.addEventListener("click",this.initLogOut.bind(this))}initValidation(t){if(t.preventDefault(),"submitBtn"==t.target.id){this.loginView.hideAlertMsgs();let t=this.loginView.getLogAndPass(),e=this.loginModel.checkFields(t.login,t.password);1==e?this.loginModel.logAndPassValidation(t).then(t=>{t.status?(this.getAndSetCheckboxStatus(),this.utils.navigateTo("mainPage"),this.loginView.showButtons(),this.loginView.hideEnterBtn()):this.loginView.showErrorMsg("1")}):this.loginView.showErrorMsg(e)}}initLogOut(){this.loginModel.logOut(),this.loginView.hideButtons(),this.loginView.showEnterBtn(),this.utils.navigateTo(""),this.getAndSetCheckboxStatus()}getAndSetCheckboxStatus(){1==this.loginView.DOMElements.checkBoxRemememberMe.checked?this.loginModel.setCheckboxStatus("true"):this.loginModel.setCheckboxStatus("false")}}(new class{constructor(){this.urlAdminUser="http://localhost:3000/adminUser",this.urlLogin="http://localhost:3000/login"}getData(){return fetch(this.urlAdminUser).then(t=>t.json()).then(t=>(console.log("Initial data is loaded"),console.log(t),t))}getCheckboxStatus(){return"true"==localStorage.getItem("remember")}setCheckboxStatus(t){localStorage.setItem("remember",t)}checkSession(){return!!localStorage.getItem("credentials")}setUserInfo(t){localStorage.setItem("credentials",JSON.stringify(t))}logOut(){localStorage.removeItem("credentials")}logAndPassValidation(t){let e=this.urlLogin,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json()).then(e=>(e.status&&this.setUserInfo(t),e))}checkFields(t,e){return t?e?this.checkEmail(t)?!!this.checkPassword(e)||"5":"4":"3":"2"}checkEmail(t){return/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(t)}checkPassword(t){return t.length>=8}saveData(t){console.log("Saving item... "+t.name);let e={name:"Saved iPhone",price:12458,popular:!0,date:1467440203};return new Promise(function(t,s){t(e)})}updateData(t){return console.log("Updating item... "+t),Promise.resolve({name:"Saved Samsung",price:12458,popular:!0,date:1467440203})}setLocalStorGalleryInitStatus(t){localStorage.isGalleryInited=t}changeLocalStorLoggedInStatus(t){localStorage.isUserLoggedIn=t}getLocalStorageGalleryStatus(){return localStorage.isGalleryInited}getIsUserLoggedIn(){return localStorage.isUserLoggedIn}checkUser(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/login",e).then(t=>t.json())}},new class{constructor(){this.DOMElements={submitBtn:document.querySelector("#submitBtn"),exitBtn:document.querySelector("#exitBtn"),email:document.querySelector("#inputEmail"),password:document.querySelector("#inputPassword"),checkBoxRemememberMe:document.querySelector("#inputRemember"),loginBtn:document.querySelector("#loginBtn"),mainPageBtn:document.querySelector("#mainPageBtn"),profileBtn:document.querySelector("#profileBtn"),galleryBtn:document.querySelector("#galleryBtn"),contactsBtn:document.querySelector("#contactsBtn"),showUserDataBtn:document.querySelector("#showUserDataBtn"),showGalleryBtn:document.querySelector("#showGalleryBtn"),alertMsg:document.querySelector("#alert-message"),notFilledEmailMsg:document.querySelector("#notFilledEmailMsg"),notFilledPassMsg:document.querySelector("#notFilledPassMsg"),wrongEmailMsg:document.querySelector("#wrongEmailMsg"),wrongPassMsg:document.querySelector("#wrongPassMsg")}}getLogAndPass(){return{login:this.DOMElements.email.value,password:this.DOMElements.password.value}}showErrorMsg(t){switch(t){case"1":this.showHide({show:[this.DOMElements.alertMsg]});break;case"2":this.showHide({show:[this.DOMElements.notFilledEmailMsg]});break;case"3":this.showHide({show:[this.DOMElements.notFilledPassMsg]});break;case"4":this.showHide({show:[this.DOMElements.wrongEmailMsg]});break;case"5":this.showHide({show:[this.DOMElements.wrongPassMsg]})}}hideAlertMsgs(){this.showHide({hide:[this.DOMElements.alertMsg,this.DOMElements.notFilledEmailMsg,this.DOMElements.notFilledPassMsg,this.DOMElements.wrongEmailMsg,this.DOMElements.wrongPassMsg]})}showAlertMsg(){this.showHide({show:[this.DOMElements.alertMsg]})}showNotFilledEmailMsg(){this.showHide({show:[this.DOMElements.notFilledEmailMsg]})}showNotFilledPasswordMsg(){this.showHide({show:[this.DOMElements.notFilledPassMsg]})}showBadLoginMsg(){this.showHide({show:[this.DOMElements.wrongEmailMsg]})}showBadPasswordMsg(){this.showHide({show:[this.DOMElements.wrongPassMsg]})}showButtons(){this.showEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideButtons(){this.hideEls([this.DOMElements.mainPageBtn,this.DOMElements.profileBtn,this.DOMElements.galleryBtn,this.DOMElements.contactsBtn,this.DOMElements.exitBtn])}hideEnterBtn(){this.hideEls([this.DOMElements.loginBtn])}showEnterBtn(){this.showEls([this.DOMElements.loginBtn])}showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}showEls(t){t.forEach(t=>{t.classList.remove("hide")})}hideEls(t){t.forEach(t=>{t.classList.add("hide")})}},e)},mainPage:()=>{e.initTemplate(s,"mainPage-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init(),this.usersAvatars={}}init(){console.log("main inited"),this.model.getProfileData().then(t=>{this.view.profileData=t[0]}),this.model.getData().then(t=>{this.view.init(t),console.log("main-posts: ",t)}),this.model.getAvatars().then(t=>{this.usersAvatars=t}),this.bindEvents()}bindEvents(){this.view.DOMElements.addPostBtn.addEventListener("click",this.addPost.bind(this))}addPost(){let t=this.view.DOMElements.authorNewPost.value,e=this.view.DOMElements.textNewPost.value,s={name:t,date:moment(),url:this.chooseAvatar(this.view.DOMElements.authorNewPost.value,this.usersAvatars),text:e,images:this.view.DOMElements.newImage.value.split(/\s+/)};console.log("postData",s),this.model.savePost(s)}chooseAvatar(t,e){console.log("userAvetars",e);for(let s in e)if(s==t)return e[s]}}(new class{constructor(){this.getUrl="http://localhost:3000/posts",this.avatarsUrl="http://localhost:3000/avatars",this.profileUrl="http://localhost:3000/profile"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getAvatars(){return fetch(this.avatarsUrl).then(t=>t.json())}getProfileData(){return fetch(this.profileUrl).then(t=>t.json())}savePost(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/posts",e).then(t=>t.json()).then(t=>(console.log("saved post",t),t))}},new class{constructor(){this.DOMElements={resultBlock:document.querySelector("#result-main"),addNewPostInput:document.querySelector("#addNewPostInput"),addNewForm:document.querySelector("#form-add-new"),addPostBtn:document.querySelector("#addPostnBtn"),authorNewPost:document.querySelector("#new-post-author"),textNewPost:document.querySelector("#new-text"),newImage:document.querySelector("#new-image"),emptyspace:document.querySelector("body"),wentToLink:document.querySelector("#wentTo"),friendsWithLink:document.querySelector("#friendsWith"),workedAtLink:document.querySelector("#workedAt"),livesInLink:document.querySelector("#livesIn"),fromLink:document.querySelector("#from")},this.utils=utils,this.readyData=[],this.profileData={}}init(t){this.initListeners(),this.refreshPosts(t),this.fillAbout(this.profileData)}initListeners(){this.DOMElements.addNewPostInput.addEventListener("click",this.showFormForAdding.bind(this)),window.addEventListener("click",this.hideFormForAdding.bind(this))}showFormForAdding(t){"addNewPostInput"==t.target.id&&this.utils.showEl(this.DOMElements.addNewForm)}hideFormForAdding(t){"emptyspace"==t.target.id&&(this.clearFormForAdd(),this.utils.hideEl(this.DOMElements.addNewForm))}clearFormForAdd(){this.DOMElements.authorNewPost.value="",this.DOMElements.textNewPost.value="",this.DOMElements.newImage.value=""}refreshPosts(t){this.readyData=t,this.biuldView(this.readyData)}biuldView(t){this.DOMElements.resultBlock.innerHTML="";for(let e=t.length-1;e>0;e--)this.DOMElements.resultBlock.innerHTML+=this.createPost(t[e])}createPost(t){let e="";return t.images.forEach(t=>{e+=`<img style="display: inline-block;  margin: 10px; vertical-align: bottom;" data-width="640" data-height="640" data-action="zoom" src="${t}">\n\t\t\t\t`}),`<li class="rv b agz">\n\t\t\t<img class="bos vb yb aff"  src= ${t.url}>\n\t\t\t<div class="rw">\n\t\t\t\t<div class="bpd">\n\t\t\t\t\t<div class="bpb">\n\t\t\t\t\t\t<small class="acx axc">${t.date}</small>\n\t\t\t\t\t\t<h6>${t.name}</h6>\n\t\t\t\t\t</div>\n\t\t\t\t\t<p class="text-left">${t.text}</p>\n\t\t\t\t\t<div class="boy" data-grid="images">${e}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</li>`}fillAbout(t){this.DOMElements.wentToLink.innerHTML=t.wentTo,this.DOMElements.friendsWithLink.innerHTML=t.friends,this.DOMElements.workedAtLink.innerHTML=t.workPlace,this.DOMElements.livesInLink.innerHTML=t.country,this.DOMElements.fromLink.innerHTML=t.state}}(e),e)},profile:()=>{e.initTemplate(s,"profile-view"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("profile inited"),this.model.getProfileData().then(t=>{this.view.init(t)})}}(new class{constructor(){this.url="http://localhost:3000/profile"}getProfileData(){return fetch(this.url).then(t=>t.json()).then(t=>(console.log("ProfileData is loaded"),t))}},new class{constructor(){this.DOMElements={firstName:document.querySelector("#firstName"),lastName:document.querySelector("#lastName"),userName:document.querySelector("#username"),email:document.querySelector("#emailProfile"),address:document.querySelector("#addressProfile"),address2:document.querySelector("#address2Profile"),country:document.querySelector("#countryProfile"),state:document.querySelector("#stateProfile"),zip:document.querySelector("#zip")},this.readyData}init(t){this.readyData=t[0],this.buildView(this.readyData)}buildView(t){console.log(this.DOMElements),console.log(t),this.DOMElements.firstName.value=t.name,this.DOMElements.lastName.value=t.lastName,this.DOMElements.userName.value=t.userName,this.DOMElements.email.value=t.email,this.DOMElements.address.value=t.adress,this.DOMElements.address2.value=t.adress2,this.DOMElements.country.value=t.country,this.DOMElements.state.value=t.state,this.DOMElements.zip.value=t.zip}},new e)},gallery:()=>{e.initTemplate(s,"gallery-view");let t=new class{constructor(){this.events={}}subscribeEvent(t,e){this.events[t]=e}callEvent(t,e){this.events[t]&&this.events[t](e)}};new class{constructor(t,e,s,i){this.model=t,this.view=e,this.observer=s,this.utils=i,this.init()}init(){console.log("gallery inited"),this.model.getData().then(t=>{this.view.init(t),console.log("gallery-data: ",t)}),this.initListeners()}initListeners(){this.view.DOMElements.addImgBtn.addEventListener("click",this.addImage.bind(this)),this.view.DOMElements.editBtn.addEventListener("click",this.editCard.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.showFormForEditing.bind(this)),this.view.DOMElements.resultBlock.addEventListener("click",this.deleteImage.bind(this))}addImage(t){if("add-img"==t.target.id){let t=this.view.createItemForAdd();this.model.saveData(t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}showFormForEditing(t){if(t.target.classList.contains("edit")){scroll(0,0),this.view.toggleAddEditBtn();let e=t.target.closest(".gallery-card").id;this.model.getItem(e).then(t=>{this.view.fillFormForEdit(t),this.objectFromresponse=t}).catch(function(t){console.log(t)})}}editCard(t){if("edit-img"==t.target.id){let t=this.view.createItemForAdd(),e=this.objectFromresponse.id;this.model.editGallery(e,t).then(t=>this.view.refreshGallery(t)),this.view.hideFormForAdding()}}deleteImage(t){if(t.target.classList.contains("remove")){let e=t.target.closest(".gallery-card").id;this.model.removeItem(e).then(t=>this.view.refreshGallery(t))}}}(new class{constructor(){this.getUrl="http://localhost:3000/gallery"}getData(){return fetch(this.getUrl).then(t=>t.json()).then(t=>(console.log("Gallery is loaded"),this.usersListData=t,t))}getItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e).then(t=>t.json())}saveData(t){let e={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch("http://localhost:3000/gallery",e).then(t=>t.json())}editGallery(t,e){let s=`http://localhost:3000/gallery/${t}`,i={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};return fetch(s,i).then(t=>t.json())}removeItem(t){let e=`http://localhost:3000/gallery/${t}`;return fetch(e,{method:"DELETE",headers:{"Content-Type":"application/json"}}).then(t=>t.json())}},new class{constructor(t){this.DOMElements={resultBlock:document.querySelector("#result"),formForAdding:document.querySelector("#form-add-new"),addNewImgBtn:document.querySelector("#add-new-img"),addImgBtn:document.querySelector("#add-img"),editBtn:document.querySelector("#edit-img"),newName:document.querySelector("#new-name"),newUrl:document.querySelector("#new-url"),newDescription:document.querySelector("#new-descr")},this.utils=t,this.readyDataForGallery=[],this.visibleData=[]}init(t){this.initListeners(),this.refreshGallery(t)}initListeners(){this.DOMElements.addNewImgBtn.addEventListener("click",this.showFormForAdding.bind(this))}showFormForAdding(t){"add-new-img"==t.target.id&&(this.clearFormForAdd(),this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.editBtn))}clearFormForAdd(){this.DOMElements.newName.value="",this.DOMElements.newUrl.value="",this.DOMElements.newDescription.value=""}fillFormForEdit(t){let e=t;this.DOMElements.newName.value=e.name,this.DOMElements.newUrl.value=e.url,this.DOMElements.newDescription.value=e.description}hideFormForAdding(){this.utils.hideEl(this.DOMElements.formForAdding)}toggleAddEditBtn(){this.utils.showEl(this.DOMElements.formForAdding),this.utils.hideEl(this.DOMElements.addImgBtn)}refreshGallery(t){this.prepareData(t),this.biuldGallery(this.visibleData)}prepareData(t){this.visibleData=[],this.readyDataForGallery=[],t.forEach(t=>{if(!t.name)return!1;this.readyDataForGallery.push(t)}),this.readyDataForGallery.map((t,e)=>({url:this.urlFomat(t.url),name:this.nameFormat(t.name),description:t.description,itemID:t.id})),this.visibleData.push.apply(this.visibleData,this.readyDataForGallery)}biuldGallery(t){this.DOMElements.resultBlock.innerHTML="";for(let e=0;e<t.length;e++)this.DOMElements.resultBlock.innerHTML+=this.createGalleryItem(t[e])}createGalleryItem(t){return`<div class="col-md-4 gallery-card" id = ${t.id}>\n\t\t\t\t\t<div class="card mb-4 box-shadow gallery-item" >\n\t\t\t\t\t\t\t<img src="${t.url}" alt="${t.name}" class="card-img-top" data-src="holder.js/100px225?theme=thumb&amp;bg=55595c&amp;fg=eceeef&amp;text=Thumbnail" data-holder-rendered="true" style="height: 225px; width: 100%; display: block;">\n\t\t\t\t\t\t\t<div class="card-body">\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${t.name}</div>\n\t\t\t\t\t\t\t\t\t<div class="card-text mb-4">${this.descrFormat(t.description)}</div>\n\t\t\t\t\t\t\t\t\t<div name = "edit-img" class="btn btn-warning edit"  title = "Редактировать данное изображение">Редактировать</div>\n\t\t\t\t\t\t\t\t\t<div  name = "delete-img" class = "btn btn-danger remove"  title = "Удалить данное изображение"> Удалить </div>\n\t\t\t\t\t\t\t\t\t<div class="btn-group">\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n\t\t\t\t\t</div>\n\t\t\t\t</div>`}createItemForAdd(){return{url:this.urlFomat(this.DOMElements.newUrl.value),name:this.nameFormat(this.DOMElements.newName.value),description:this.DOMElements.newDescription.value}}nameFormat(t){return t?t[0].toUpperCase()+t.substring(1).toLowerCase():"Lohn Doh"}urlFomat(t){return-1===t.indexOf("https://")?`https://${t}`:t}descrFormat(t){return t||""}}(e),t,new e)},contacts:()=>{e.initTemplate(s,"contact-view"),console.log("Contacts route is loaded"),new class{constructor(t,e,s){this.model=t,this.view=e,this.utils=s,this.init()}init(){console.log("contacts inited"),this.view.init(),this.initListeners(),this.model.getData().then(t=>{this.view.buildWall(t)})}initListeners(){this.view.DOMElements.sendInfoBTN.addEventListener("click",this.sendInfo.bind(this))}sendInfo(){let t={name:this.view.DOMElements.name.value,email:this.view.DOMElements.email.value,phone:this.view.DOMElements.phone.value,msg:this.view.DOMElements.msg.value,date:moment()};console.log(t),this.model.saveMsg(t)}}(new class{constructor(){this.url="http://localhost:3000/wall"}getData(){return fetch(this.url).then(t=>t.json()).then(t=>t)}saveMsg(t){console.log(t);let e=this.url,s={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};return fetch(e,s).then(t=>t.json())}},new class{constructor(){this.DOMElements={googleMap:document.querySelector("#googleMap"),name:document.querySelector("#contactsName"),email:document.querySelector("#contactsEmail"),phone:document.querySelector("#contactsTel"),msg:document.querySelector("#contactsMessage"),sendInfoBTN:document.querySelector("#sendInfoBTN"),wall:document.querySelector("#wall")}}init(){this.buildGoogleMap()}buildGoogleMap(){var t=this.DOMElements.googleMap,e={center:new google.maps.LatLng(43.6,-79.3),zoom:8};new google.maps.Map(t,e)}buildWall(t){let e=t;console.log(e);for(let t=e.length-1;t>=0;t--)this.DOMElements.wall.innerHTML+=this.createWallItem(e[t])}createWallItem(t){return`<div class="col-md-12" id = ${t.id}>\n\n\t\t\t\t\t\t\t\t<div class="wall-item">\n\t\t\t\t\t\t\t\t\t<div class ="col-md-4">\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>User</b>: ${t.name}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Email</b>: ${t.email}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Phone</b>: ${t.phone}</div>\n\t\t\t\t\t\t\t\t\t\t<div class="text-left"><b>Date</b>: ${t.date}</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div class="text-left col-md-8"> <strong>${t.msg}</strong></div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<hr class="mb-4">\n\t\t\t\t\t\t\t</div>`}},new e)}};return t.updateRoute=function(){let t=document.location.hash.replace(/^#/,"");t&&!e.isLoggedIn()?e.navigateTo(""):function(t){let e=i[t];e&&e()}(t)},t}({}),utils=function(){"use strict";return class{constructor(){this.sortingConfig={A:t=>(t.sort((t,e)=>t.email>e.email?1:-1),t),Z:t=>(t.sort((t,e)=>t.email<e.email?1:-1),t),Admin:t=>t.filter(t=>"Admin"==t.role),User:t=>t.filter(t=>"User"==t.role),Find:t=>{let e=new RegExp(event.target.value,"i");return t.filter(t=>e.test(t.name))}}}static initTemplate(t,e){var s=document.querySelector(`#${e}`).content.cloneNode(!0);t.innerHTML="",t.appendChild(s)}static showView(t){t.forEach(t=>{t.classList.remove("hide")})}static hideView(t){t.forEach(t=>{t.classList.add("hide")})}static navigateTo(t){window.location.hash="#"+t}static isLoggedIn(){return!0}static activateBtn(t){t.forEach(t=>{t.parentElement.classList.add("active")})}static disactivateBtn(t){t.forEach(t=>{t.parentElement.classList.remove("active")})}static showHide(t){for(var e in t)t[e=e].forEach(t=>{t.classList.remove("show","hide"),t.classList.add(e)})}static showEl(t){t.classList.remove("hide")}static hideEl(t){t.classList.add("hide")}}}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
